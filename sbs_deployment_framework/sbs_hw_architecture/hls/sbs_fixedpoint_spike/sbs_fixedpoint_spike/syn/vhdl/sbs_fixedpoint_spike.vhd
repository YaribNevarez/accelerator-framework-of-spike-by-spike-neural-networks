-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sbs_fixedpoint_spike is
generic (
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    stream_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    stream_in_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    stream_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    stream_out_TVALID : OUT STD_LOGIC;
    stream_out_TREADY : IN STD_LOGIC;
    stream_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    stream_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    stream_out_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    stream_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    stream_out_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of sbs_fixedpoint_spike is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sbs_fixedpoint_spike,hls_ip_2019_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.732000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1180,HLS_SYN_LUT=1108,HLS_VERSION=2019_1_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal stream_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_V_data_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_data_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel : STD_LOGIC;
    signal stream_in_V_data_V_0_load_A : STD_LOGIC;
    signal stream_in_V_data_V_0_load_B : STD_LOGIC;
    signal stream_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_keep_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_keep_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_keep_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_keep_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_keep_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_keep_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_keep_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_keep_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_keep_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_keep_V_0_sel : STD_LOGIC;
    signal stream_in_V_keep_V_0_load_A : STD_LOGIC;
    signal stream_in_V_keep_V_0_load_B : STD_LOGIC;
    signal stream_in_V_keep_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_keep_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_strb_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_strb_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_strb_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_strb_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_strb_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_strb_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_strb_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_strb_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_strb_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_strb_V_0_sel : STD_LOGIC;
    signal stream_in_V_strb_V_0_load_A : STD_LOGIC;
    signal stream_in_V_strb_V_0_load_B : STD_LOGIC;
    signal stream_in_V_strb_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_strb_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_user_V_0_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_in_V_user_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_user_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_user_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_user_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_user_V_0_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_in_V_user_V_0_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_in_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_user_V_0_sel : STD_LOGIC;
    signal stream_in_V_user_V_0_load_A : STD_LOGIC;
    signal stream_in_V_user_V_0_load_B : STD_LOGIC;
    signal stream_in_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_id_V_0_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_in_V_id_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_id_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_id_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_id_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_id_V_0_payload_A : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_in_V_id_V_0_payload_B : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_in_V_id_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_id_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_id_V_0_sel : STD_LOGIC;
    signal stream_in_V_id_V_0_load_A : STD_LOGIC;
    signal stream_in_V_id_V_0_load_B : STD_LOGIC;
    signal stream_in_V_id_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_id_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_dest_V_0_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_in_V_dest_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_payload_A : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_in_V_dest_V_0_payload_B : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_in_V_dest_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_A : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_B : STD_LOGIC;
    signal stream_in_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_dest_V_0_state_cmp_full : STD_LOGIC;
    signal stream_out_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_out_V_data_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_data_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_data_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_data_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_data_V_1_sel : STD_LOGIC;
    signal stream_out_V_data_V_1_load_A : STD_LOGIC;
    signal stream_out_V_data_V_1_load_B : STD_LOGIC;
    signal stream_out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_keep_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_keep_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_keep_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_keep_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_keep_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_keep_V_1_sel : STD_LOGIC;
    signal stream_out_V_keep_V_1_load_A : STD_LOGIC;
    signal stream_out_V_keep_V_1_load_B : STD_LOGIC;
    signal stream_out_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_strb_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_strb_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_strb_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_strb_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_strb_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_strb_V_1_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_strb_V_1_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_strb_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_strb_V_1_sel : STD_LOGIC;
    signal stream_out_V_strb_V_1_load_A : STD_LOGIC;
    signal stream_out_V_strb_V_1_load_B : STD_LOGIC;
    signal stream_out_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_strb_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_user_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_out_V_user_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_user_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_user_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_user_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_user_V_1_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_out_V_user_V_1_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_out_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_user_V_1_sel : STD_LOGIC;
    signal stream_out_V_user_V_1_load_A : STD_LOGIC;
    signal stream_out_V_user_V_1_load_B : STD_LOGIC;
    signal stream_out_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_last_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_last_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_last_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_last_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_last_V_1_sel : STD_LOGIC;
    signal stream_out_V_last_V_1_load_A : STD_LOGIC;
    signal stream_out_V_last_V_1_load_B : STD_LOGIC;
    signal stream_out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_id_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_out_V_id_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_id_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_id_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_id_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_id_V_1_payload_A : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_out_V_id_V_1_payload_B : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_out_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_id_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_id_V_1_sel : STD_LOGIC;
    signal stream_out_V_id_V_1_load_A : STD_LOGIC;
    signal stream_out_V_id_V_1_load_B : STD_LOGIC;
    signal stream_out_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_id_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_dest_V_1_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_out_V_dest_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_dest_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_dest_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_dest_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_out_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_out_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_dest_V_1_sel : STD_LOGIC;
    signal stream_out_V_dest_V_1_load_A : STD_LOGIC;
    signal stream_out_V_dest_V_1_load_B : STD_LOGIC;
    signal stream_out_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal layerSize : STD_LOGIC_VECTOR (31 downto 0);
    signal vectorSize : STD_LOGIC_VECTOR (31 downto 0);
    signal ip_index : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal channel_keep_V : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal channel_strb_V : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal channel_user_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal channel_id_V : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal channel_dest_V : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal random_value : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sum : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal stream_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln26_fu_193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln40_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal and_ln46_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln43_reg_415 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln46_reg_445 : STD_LOGIC_VECTOR (0 downto 0);
    signal vectorSize_read_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal layerSize_read_reg_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln46_fu_177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln46_reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln48_fu_182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln48_reg_381 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_3_fu_266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_3_reg_392 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal add_ln40_fu_275_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln40_reg_400 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln43_fu_289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_reg_410 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln43_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_1_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_1_reg_424 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln26_fu_314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_303_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln45_reg_434 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln46_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_440 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_state7_io : BOOLEAN;
    signal tmp_last_V_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_147 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_2_reg_158 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal ap_predicate_op93_write_state8 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal icmp_ln29_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_303_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_303_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component sbs_fixedpoint_spike_add_64ns_64ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sbs_fixedpoint_spike_CRTL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        layerSize : OUT STD_LOGIC_VECTOR (31 downto 0);
        vectorSize : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    sbs_fixedpoint_spike_CRTL_BUS_s_axi_U : component sbs_fixedpoint_spike_CRTL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        layerSize => layerSize,
        vectorSize => vectorSize);

    sbs_fixedpoint_spike_add_64ns_64ns_64_2_1_U1 : component sbs_fixedpoint_spike_add_64ns_64ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => sum,
        din1 => grp_fu_303_p1,
        ce => grp_fu_303_ce,
        dout => grp_fu_303_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_data_V_0_ack_out = ap_const_logic_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_data_V_0_sel_rd <= not(stream_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_data_V_0_ack_in = ap_const_logic_1) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_data_V_0_sel_wr <= not(stream_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_data_V_0_state = ap_const_lv2_2) and (stream_in_V_data_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_data_V_0_state = ap_const_lv2_3) and (stream_in_V_data_V_0_vld_in = ap_const_logic_0) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_data_V_0_state = ap_const_lv2_1) and (stream_in_V_data_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_data_V_0_state = ap_const_lv2_3) and (stream_in_V_data_V_0_ack_out = ap_const_logic_0) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_data_V_0_vld_in = ap_const_logic_0) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_data_V_0_ack_out = ap_const_logic_0) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_data_V_0_state = ap_const_lv2_3)) or ((stream_in_V_data_V_0_state = ap_const_lv2_1) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_data_V_0_state = ap_const_lv2_2) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_dest_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_dest_V_0_ack_out = ap_const_logic_1) and (stream_in_V_dest_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_dest_V_0_sel_rd <= not(stream_in_V_dest_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_dest_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_dest_V_0_ack_in = ap_const_logic_1) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_dest_V_0_sel_wr <= not(stream_in_V_dest_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_dest_V_0_state = ap_const_lv2_2) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_3) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_0) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_dest_V_0_state = ap_const_lv2_1) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_3) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_0) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_dest_V_0_vld_in = ap_const_logic_0) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_dest_V_0_ack_out = ap_const_logic_0) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_dest_V_0_state = ap_const_lv2_3)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_1) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_2) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_id_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_id_V_0_ack_out = ap_const_logic_1) and (stream_in_V_id_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_id_V_0_sel_rd <= not(stream_in_V_id_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_id_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_id_V_0_ack_in = ap_const_logic_1) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_id_V_0_sel_wr <= not(stream_in_V_id_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_id_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_id_V_0_state = ap_const_lv2_2) and (stream_in_V_id_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_id_V_0_state = ap_const_lv2_3) and (stream_in_V_id_V_0_vld_in = ap_const_logic_0) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_id_V_0_state = ap_const_lv2_1) and (stream_in_V_id_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_id_V_0_state = ap_const_lv2_3) and (stream_in_V_id_V_0_ack_out = ap_const_logic_0) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_id_V_0_vld_in = ap_const_logic_0) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_id_V_0_ack_out = ap_const_logic_0) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_id_V_0_state = ap_const_lv2_3)) or ((stream_in_V_id_V_0_state = ap_const_lv2_1) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_id_V_0_state = ap_const_lv2_2) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_id_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_keep_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_keep_V_0_ack_out = ap_const_logic_1) and (stream_in_V_keep_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_keep_V_0_sel_rd <= not(stream_in_V_keep_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_keep_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_keep_V_0_ack_in = ap_const_logic_1) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_keep_V_0_sel_wr <= not(stream_in_V_keep_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_keep_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_keep_V_0_state = ap_const_lv2_2) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_3) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_0) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_keep_V_0_state = ap_const_lv2_1) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_3) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_0) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_keep_V_0_vld_in = ap_const_logic_0) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_keep_V_0_ack_out = ap_const_logic_0) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_keep_V_0_state = ap_const_lv2_3)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_1) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_2) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_strb_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_strb_V_0_ack_out = ap_const_logic_1) and (stream_in_V_strb_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_strb_V_0_sel_rd <= not(stream_in_V_strb_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_strb_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_strb_V_0_ack_in = ap_const_logic_1) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_strb_V_0_sel_wr <= not(stream_in_V_strb_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_strb_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_strb_V_0_state = ap_const_lv2_2) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_3) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_0) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_strb_V_0_state = ap_const_lv2_1) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_3) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_0) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_strb_V_0_vld_in = ap_const_logic_0) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_strb_V_0_ack_out = ap_const_logic_0) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_strb_V_0_state = ap_const_lv2_3)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_1) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_2) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_user_V_0_ack_out = ap_const_logic_1) and (stream_in_V_user_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_user_V_0_sel_rd <= not(stream_in_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_user_V_0_ack_in = ap_const_logic_1) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_user_V_0_sel_wr <= not(stream_in_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_user_V_0_state = ap_const_lv2_2) and (stream_in_V_user_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_user_V_0_state = ap_const_lv2_3) and (stream_in_V_user_V_0_vld_in = ap_const_logic_0) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_user_V_0_state = ap_const_lv2_1) and (stream_in_V_user_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_user_V_0_state = ap_const_lv2_3) and (stream_in_V_user_V_0_ack_out = ap_const_logic_0) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_user_V_0_vld_in = ap_const_logic_0) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_user_V_0_ack_out = ap_const_logic_0) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_user_V_0_state = ap_const_lv2_3)) or ((stream_in_V_user_V_0_state = ap_const_lv2_1) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_user_V_0_state = ap_const_lv2_2) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_data_V_1_ack_out = ap_const_logic_1) and (stream_out_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_data_V_1_sel_rd <= not(stream_out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_data_V_1_ack_in = ap_const_logic_1) and (stream_out_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_data_V_1_sel_wr <= not(stream_out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_data_V_1_state = ap_const_lv2_2) and (stream_out_V_data_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_V_data_V_1_vld_in = ap_const_logic_0) and (stream_out_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_data_V_1_state = ap_const_lv2_1) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0) and (stream_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_data_V_1_vld_in = ap_const_logic_0) and (stream_out_V_data_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_TREADY = ap_const_logic_0) and (stream_out_V_data_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_data_V_1_state = ap_const_lv2_3)) or ((stream_out_V_data_V_1_state = ap_const_lv2_1) and (stream_out_V_data_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_data_V_1_state = ap_const_lv2_2) and (stream_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_dest_V_1_ack_out = ap_const_logic_1) and (stream_out_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_dest_V_1_sel_rd <= not(stream_out_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_dest_V_1_ack_in = ap_const_logic_1) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_dest_V_1_sel_wr <= not(stream_out_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_dest_V_1_state = ap_const_lv2_2) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_0) and (stream_out_V_dest_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_dest_V_1_state = ap_const_lv2_1) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_dest_V_1_vld_in = ap_const_logic_0) and (stream_out_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_TREADY = ap_const_logic_0) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_dest_V_1_state = ap_const_lv2_3)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_1) and (stream_out_V_dest_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_2) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_id_V_1_ack_out = ap_const_logic_1) and (stream_out_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_id_V_1_sel_rd <= not(stream_out_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_id_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_id_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_id_V_1_ack_in = ap_const_logic_1) and (stream_out_V_id_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_id_V_1_sel_wr <= not(stream_out_V_id_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_id_V_1_state = ap_const_lv2_2) and (stream_out_V_id_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_V_id_V_1_vld_in = ap_const_logic_0) and (stream_out_V_id_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_id_V_1_state = ap_const_lv2_1) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0) and (stream_out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_id_V_1_vld_in = ap_const_logic_0) and (stream_out_V_id_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_TREADY = ap_const_logic_0) and (stream_out_V_id_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_id_V_1_state = ap_const_lv2_3)) or ((stream_out_V_id_V_1_state = ap_const_lv2_1) and (stream_out_V_id_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_id_V_1_state = ap_const_lv2_2) and (stream_out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_keep_V_1_ack_out = ap_const_logic_1) and (stream_out_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_keep_V_1_sel_rd <= not(stream_out_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_keep_V_1_ack_in = ap_const_logic_1) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_keep_V_1_sel_wr <= not(stream_out_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_keep_V_1_state = ap_const_lv2_2) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_0) and (stream_out_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_keep_V_1_state = ap_const_lv2_1) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_keep_V_1_vld_in = ap_const_logic_0) and (stream_out_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_TREADY = ap_const_logic_0) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_keep_V_1_state = ap_const_lv2_3)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_1) and (stream_out_V_keep_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_2) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_last_V_1_ack_out = ap_const_logic_1) and (stream_out_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_last_V_1_sel_rd <= not(stream_out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_last_V_1_ack_in = ap_const_logic_1) and (stream_out_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_last_V_1_sel_wr <= not(stream_out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_last_V_1_state = ap_const_lv2_2) and (stream_out_V_last_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_V_last_V_1_vld_in = ap_const_logic_0) and (stream_out_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_last_V_1_state = ap_const_lv2_1) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0) and (stream_out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_last_V_1_vld_in = ap_const_logic_0) and (stream_out_V_last_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_TREADY = ap_const_logic_0) and (stream_out_V_last_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_last_V_1_state = ap_const_lv2_3)) or ((stream_out_V_last_V_1_state = ap_const_lv2_1) and (stream_out_V_last_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_last_V_1_state = ap_const_lv2_2) and (stream_out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_strb_V_1_ack_out = ap_const_logic_1) and (stream_out_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_strb_V_1_sel_rd <= not(stream_out_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_strb_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_strb_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_strb_V_1_ack_in = ap_const_logic_1) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_strb_V_1_sel_wr <= not(stream_out_V_strb_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_strb_V_1_state = ap_const_lv2_2) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_0) and (stream_out_V_strb_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_strb_V_1_state = ap_const_lv2_1) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_strb_V_1_vld_in = ap_const_logic_0) and (stream_out_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_TREADY = ap_const_logic_0) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_strb_V_1_state = ap_const_lv2_3)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_1) and (stream_out_V_strb_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_2) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_user_V_1_ack_out = ap_const_logic_1) and (stream_out_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_user_V_1_sel_rd <= not(stream_out_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_user_V_1_ack_in = ap_const_logic_1) and (stream_out_V_user_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_user_V_1_sel_wr <= not(stream_out_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_user_V_1_state = ap_const_lv2_2) and (stream_out_V_user_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_V_user_V_1_vld_in = ap_const_logic_0) and (stream_out_V_user_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_user_V_1_state = ap_const_lv2_1) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0) and (stream_out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_user_V_1_vld_in = ap_const_logic_0) and (stream_out_V_user_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_TREADY = ap_const_logic_0) and (stream_out_V_user_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_user_V_1_state = ap_const_lv2_3)) or ((stream_out_V_user_V_1_state = ap_const_lv2_1) and (stream_out_V_user_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_user_V_1_state = ap_const_lv2_2) and (stream_out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    empty_reg_147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                empty_reg_147 <= add_ln26_fu_314_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                empty_reg_147 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    sum_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                sum <= add_ln45_reg_434;
            elsif ((not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                sum <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    tmp_data_V_2_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_io))) then 
                tmp_data_V_2_reg_158 <= add_ln40_reg_400;
            elsif ((not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                tmp_data_V_2_reg_158 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                add_ln40_reg_400 <= add_ln40_fu_275_p2;
                    tmp_data_V_3_reg_392(30 downto 0) <= tmp_data_V_3_fu_266_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln45_reg_434 <= grp_fu_303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln46_reg_376 <= add_ln46_fu_177_p2;
                add_ln48_reg_381 <= add_ln48_fu_182_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state7_io) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                and_ln46_reg_445 <= and_ln46_fu_329_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (icmp_ln29_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                channel_dest_V <= stream_in_V_dest_V_0_data_out;
                channel_id_V <= stream_in_V_id_V_0_data_out;
                channel_keep_V <= stream_in_V_keep_V_0_data_out;
                channel_strb_V <= stream_in_V_strb_V_0_data_out;
                channel_user_V <= stream_in_V_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln43_reg_415 <= icmp_ln43_fu_293_p2;
                    zext_ln43_reg_410(31 downto 0) <= zext_ln43_fu_289_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln43_fu_293_p2 = ap_const_lv1_1) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln46_1_reg_424 <= icmp_ln46_1_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln46_reg_440 <= icmp_ln46_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                ip_index <= empty_reg_147;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                layerSize_read_reg_370 <= layerSize;
                vectorSize_read_reg_364 <= vectorSize;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                random_value <= stream_in_V_data_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_data_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_data_V_0_payload_A <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_data_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_data_V_0_payload_B <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_dest_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_dest_V_0_payload_A <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_dest_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_dest_V_0_payload_B <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_id_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_id_V_0_payload_A <= stream_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_id_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_id_V_0_payload_B <= stream_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_keep_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_keep_V_0_payload_A <= stream_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_keep_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_keep_V_0_payload_B <= stream_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_strb_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_strb_V_0_payload_A <= stream_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_strb_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_strb_V_0_payload_B <= stream_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_user_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_user_V_0_payload_A <= stream_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_user_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_user_V_0_payload_B <= stream_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_data_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_data_V_1_payload_A <= tmp_data_V_3_reg_392;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_data_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_data_V_1_payload_B <= tmp_data_V_3_reg_392;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_dest_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_dest_V_1_payload_A <= channel_dest_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_dest_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_dest_V_1_payload_B <= channel_dest_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_id_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_id_V_1_payload_A <= channel_id_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_id_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_id_V_1_payload_B <= channel_id_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_keep_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_keep_V_1_payload_A <= channel_keep_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_keep_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_keep_V_1_payload_B <= channel_keep_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_last_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_last_V_1_payload_A <= tmp_last_V_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_last_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_last_V_1_payload_B <= tmp_last_V_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_strb_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_strb_V_1_payload_A <= channel_strb_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_strb_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_strb_V_1_payload_B <= channel_strb_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_user_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_user_V_1_payload_A <= channel_user_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_user_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_user_V_1_payload_B <= channel_user_V;
            end if;
        end if;
    end process;
    tmp_data_V_3_reg_392(31) <= '0';
    zext_ln43_reg_410(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2, ap_CS_fsm_state4, icmp_ln40_fu_270_p2, ap_CS_fsm_state7, ap_CS_fsm_state8, icmp_ln43_fu_293_p2, ap_block_state7_io, ap_block_state8_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (icmp_ln43_fu_293_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif ((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln43_fu_293_p2 = ap_const_lv1_1) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_boolean_0 = ap_block_state7_io) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln26_fu_314_p2 <= std_logic_vector(unsigned(ip_index) + unsigned(ap_const_lv32_1));
    add_ln40_fu_275_p2 <= std_logic_vector(unsigned(tmp_data_V_2_reg_158) + unsigned(ap_const_lv31_1));
    add_ln46_fu_177_p2 <= std_logic_vector(unsigned(vectorSize_read_reg_364) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln48_fu_182_p2 <= std_logic_vector(unsigned(layerSize_read_reg_370) + unsigned(ap_const_lv32_FFFFFFFF));
    and_ln46_fu_329_p2 <= (icmp_ln46_reg_440 and icmp_ln46_1_reg_424);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state3_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, icmp_ln26_fu_193_p2)
    begin
                ap_block_state3 <= ((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)));
    end process;


    ap_block_state4_assign_proc : process(stream_in_V_data_V_0_vld_out, icmp_ln40_fu_270_p2)
    begin
                ap_block_state4 <= ((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state7_io_assign_proc : process(stream_out_V_data_V_1_ack_in, and_ln46_fu_329_p2)
    begin
                ap_block_state7_io <= ((ap_const_lv1_0 = and_ln46_fu_329_p2) and (stream_out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state8_io_assign_proc : process(stream_out_V_data_V_1_ack_in, ap_predicate_op93_write_state8)
    begin
                ap_block_state8_io <= ((stream_out_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op93_write_state8 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2)
    begin
        if ((not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op93_write_state8_assign_proc : process(icmp_ln43_reg_415, and_ln46_reg_445)
    begin
                ap_predicate_op93_write_state8 <= ((icmp_ln43_reg_415 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln46_reg_445));
    end process;


    ap_ready_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2)
    begin
        if ((not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    grp_fu_303_ce_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_CS_fsm_state4, icmp_ln40_fu_270_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            grp_fu_303_ce <= ap_const_logic_1;
        else 
            grp_fu_303_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(stream_in_V_data_V_0_data_out),64));
    icmp_ln26_fu_193_p2 <= "1" when (signed(empty_reg_147) < signed(layerSize_read_reg_370)) else "0";
    icmp_ln29_fu_198_p2 <= "1" when (empty_reg_147 = ap_const_lv32_0) else "0";
    icmp_ln40_fu_270_p2 <= "1" when (signed(tmp_data_V_3_fu_266_p1) < signed(vectorSize_read_reg_364)) else "0";
    icmp_ln43_fu_293_p2 <= "1" when (unsigned(sum) < unsigned(zext_ln43_fu_289_p1)) else "0";
    icmp_ln46_1_fu_309_p2 <= "0" when (tmp_data_V_3_fu_266_p1 = add_ln46_reg_376) else "1";
    icmp_ln46_fu_325_p2 <= "1" when (unsigned(add_ln45_reg_434) < unsigned(zext_ln43_reg_410)) else "0";

    stream_in_TDATA_blk_n_assign_proc : process(stream_in_V_data_V_0_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2, ap_CS_fsm_state4, icmp_ln40_fu_270_p2)
    begin
        if ((((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            stream_in_TDATA_blk_n <= stream_in_V_data_V_0_state(0);
        else 
            stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_TREADY <= stream_in_V_dest_V_0_state(1);
    stream_in_V_data_V_0_ack_in <= stream_in_V_data_V_0_state(1);

    stream_in_V_data_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2, ap_CS_fsm_state4, icmp_ln40_fu_270_p2)
    begin
        if (((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            stream_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_data_V_0_data_out_assign_proc : process(stream_in_V_data_V_0_payload_A, stream_in_V_data_V_0_payload_B, stream_in_V_data_V_0_sel)
    begin
        if ((stream_in_V_data_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_B;
        else 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_data_V_0_load_A <= (stream_in_V_data_V_0_state_cmp_full and not(stream_in_V_data_V_0_sel_wr));
    stream_in_V_data_V_0_load_B <= (stream_in_V_data_V_0_state_cmp_full and stream_in_V_data_V_0_sel_wr);
    stream_in_V_data_V_0_sel <= stream_in_V_data_V_0_sel_rd;
    stream_in_V_data_V_0_state_cmp_full <= '0' when (stream_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_data_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_data_V_0_vld_out <= stream_in_V_data_V_0_state(0);
    stream_in_V_dest_V_0_ack_in <= stream_in_V_dest_V_0_state(1);

    stream_in_V_dest_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2, ap_CS_fsm_state4, icmp_ln40_fu_270_p2)
    begin
        if (((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            stream_in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_dest_V_0_data_out_assign_proc : process(stream_in_V_dest_V_0_payload_A, stream_in_V_dest_V_0_payload_B, stream_in_V_dest_V_0_sel)
    begin
        if ((stream_in_V_dest_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_B;
        else 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_dest_V_0_load_A <= (stream_in_V_dest_V_0_state_cmp_full and not(stream_in_V_dest_V_0_sel_wr));
    stream_in_V_dest_V_0_load_B <= (stream_in_V_dest_V_0_state_cmp_full and stream_in_V_dest_V_0_sel_wr);
    stream_in_V_dest_V_0_sel <= stream_in_V_dest_V_0_sel_rd;
    stream_in_V_dest_V_0_state_cmp_full <= '0' when (stream_in_V_dest_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_dest_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_dest_V_0_vld_out <= stream_in_V_dest_V_0_state(0);
    stream_in_V_id_V_0_ack_in <= stream_in_V_id_V_0_state(1);

    stream_in_V_id_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2, ap_CS_fsm_state4, icmp_ln40_fu_270_p2)
    begin
        if (((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            stream_in_V_id_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_id_V_0_data_out_assign_proc : process(stream_in_V_id_V_0_payload_A, stream_in_V_id_V_0_payload_B, stream_in_V_id_V_0_sel)
    begin
        if ((stream_in_V_id_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_id_V_0_data_out <= stream_in_V_id_V_0_payload_B;
        else 
            stream_in_V_id_V_0_data_out <= stream_in_V_id_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_id_V_0_load_A <= (stream_in_V_id_V_0_state_cmp_full and not(stream_in_V_id_V_0_sel_wr));
    stream_in_V_id_V_0_load_B <= (stream_in_V_id_V_0_state_cmp_full and stream_in_V_id_V_0_sel_wr);
    stream_in_V_id_V_0_sel <= stream_in_V_id_V_0_sel_rd;
    stream_in_V_id_V_0_state_cmp_full <= '0' when (stream_in_V_id_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_id_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_id_V_0_vld_out <= stream_in_V_id_V_0_state(0);
    stream_in_V_keep_V_0_ack_in <= stream_in_V_keep_V_0_state(1);

    stream_in_V_keep_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2, ap_CS_fsm_state4, icmp_ln40_fu_270_p2)
    begin
        if (((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            stream_in_V_keep_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_keep_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_keep_V_0_data_out_assign_proc : process(stream_in_V_keep_V_0_payload_A, stream_in_V_keep_V_0_payload_B, stream_in_V_keep_V_0_sel)
    begin
        if ((stream_in_V_keep_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_keep_V_0_data_out <= stream_in_V_keep_V_0_payload_B;
        else 
            stream_in_V_keep_V_0_data_out <= stream_in_V_keep_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_keep_V_0_load_A <= (stream_in_V_keep_V_0_state_cmp_full and not(stream_in_V_keep_V_0_sel_wr));
    stream_in_V_keep_V_0_load_B <= (stream_in_V_keep_V_0_state_cmp_full and stream_in_V_keep_V_0_sel_wr);
    stream_in_V_keep_V_0_sel <= stream_in_V_keep_V_0_sel_rd;
    stream_in_V_keep_V_0_state_cmp_full <= '0' when (stream_in_V_keep_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_keep_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_keep_V_0_vld_out <= stream_in_V_keep_V_0_state(0);
    stream_in_V_strb_V_0_ack_in <= stream_in_V_strb_V_0_state(1);

    stream_in_V_strb_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2, ap_CS_fsm_state4, icmp_ln40_fu_270_p2)
    begin
        if (((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            stream_in_V_strb_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_strb_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_strb_V_0_data_out_assign_proc : process(stream_in_V_strb_V_0_payload_A, stream_in_V_strb_V_0_payload_B, stream_in_V_strb_V_0_sel)
    begin
        if ((stream_in_V_strb_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_strb_V_0_data_out <= stream_in_V_strb_V_0_payload_B;
        else 
            stream_in_V_strb_V_0_data_out <= stream_in_V_strb_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_strb_V_0_load_A <= (stream_in_V_strb_V_0_state_cmp_full and not(stream_in_V_strb_V_0_sel_wr));
    stream_in_V_strb_V_0_load_B <= (stream_in_V_strb_V_0_state_cmp_full and stream_in_V_strb_V_0_sel_wr);
    stream_in_V_strb_V_0_sel <= stream_in_V_strb_V_0_sel_rd;
    stream_in_V_strb_V_0_state_cmp_full <= '0' when (stream_in_V_strb_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_strb_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_strb_V_0_vld_out <= stream_in_V_strb_V_0_state(0);
    stream_in_V_user_V_0_ack_in <= stream_in_V_user_V_0_state(1);

    stream_in_V_user_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_TREADY, stream_out_V_data_V_1_state, stream_out_V_keep_V_1_state, stream_out_V_strb_V_1_state, stream_out_V_user_V_1_state, stream_out_V_last_V_1_state, stream_out_V_id_V_1_state, stream_out_V_dest_V_1_state, ap_CS_fsm_state3, icmp_ln26_fu_193_p2, ap_CS_fsm_state4, icmp_ln40_fu_270_p2)
    begin
        if (((not(((icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln40_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((stream_out_V_dest_V_1_state = ap_const_lv2_1) or (stream_out_V_id_V_1_state = ap_const_lv2_1) or (stream_out_V_last_V_1_state = ap_const_lv2_1) or (stream_out_V_user_V_1_state = ap_const_lv2_1) or (stream_out_V_strb_V_1_state = ap_const_lv2_1) or (stream_out_V_keep_V_1_state = ap_const_lv2_1) or (stream_out_V_data_V_1_state = ap_const_lv2_1) or ((icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_TREADY = ap_const_logic_0)))) and (icmp_ln26_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            stream_in_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_user_V_0_data_out_assign_proc : process(stream_in_V_user_V_0_payload_A, stream_in_V_user_V_0_payload_B, stream_in_V_user_V_0_sel)
    begin
        if ((stream_in_V_user_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_user_V_0_data_out <= stream_in_V_user_V_0_payload_B;
        else 
            stream_in_V_user_V_0_data_out <= stream_in_V_user_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_user_V_0_load_A <= (stream_in_V_user_V_0_state_cmp_full and not(stream_in_V_user_V_0_sel_wr));
    stream_in_V_user_V_0_load_B <= (stream_in_V_user_V_0_state_cmp_full and stream_in_V_user_V_0_sel_wr);
    stream_in_V_user_V_0_sel <= stream_in_V_user_V_0_sel_rd;
    stream_in_V_user_V_0_state_cmp_full <= '0' when (stream_in_V_user_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_user_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_user_V_0_vld_out <= stream_in_V_user_V_0_state(0);
    stream_out_TDATA <= stream_out_V_data_V_1_data_out;

    stream_out_TDATA_blk_n_assign_proc : process(stream_out_V_data_V_1_state, ap_CS_fsm_state7, and_ln46_fu_329_p2, ap_CS_fsm_state8, icmp_ln43_reg_415, and_ln46_reg_445)
    begin
        if ((((icmp_ln43_reg_415 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln46_reg_445) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_0 = and_ln46_fu_329_p2) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            stream_out_TDATA_blk_n <= stream_out_V_data_V_1_state(1);
        else 
            stream_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_TDEST <= stream_out_V_dest_V_1_data_out;
    stream_out_TID <= stream_out_V_id_V_1_data_out;
    stream_out_TKEEP <= stream_out_V_keep_V_1_data_out;
    stream_out_TLAST <= stream_out_V_last_V_1_data_out;
    stream_out_TSTRB <= stream_out_V_strb_V_1_data_out;
    stream_out_TUSER <= stream_out_V_user_V_1_data_out;
    stream_out_TVALID <= stream_out_V_dest_V_1_state(0);
    stream_out_V_data_V_1_ack_in <= stream_out_V_data_V_1_state(1);
    stream_out_V_data_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_data_V_1_data_out_assign_proc : process(stream_out_V_data_V_1_payload_A, stream_out_V_data_V_1_payload_B, stream_out_V_data_V_1_sel)
    begin
        if ((stream_out_V_data_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_data_V_1_data_out <= stream_out_V_data_V_1_payload_B;
        else 
            stream_out_V_data_V_1_data_out <= stream_out_V_data_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_data_V_1_load_A <= (stream_out_V_data_V_1_state_cmp_full and not(stream_out_V_data_V_1_sel_wr));
    stream_out_V_data_V_1_load_B <= (stream_out_V_data_V_1_state_cmp_full and stream_out_V_data_V_1_sel_wr);
    stream_out_V_data_V_1_sel <= stream_out_V_data_V_1_sel_rd;
    stream_out_V_data_V_1_state_cmp_full <= '0' when (stream_out_V_data_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_state7, and_ln46_fu_329_p2, ap_block_state7_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_io) and (ap_const_lv1_0 = and_ln46_fu_329_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            stream_out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_data_V_1_vld_out <= stream_out_V_data_V_1_state(0);
    stream_out_V_dest_V_1_ack_in <= stream_out_V_dest_V_1_state(1);
    stream_out_V_dest_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_dest_V_1_data_out_assign_proc : process(stream_out_V_dest_V_1_payload_A, stream_out_V_dest_V_1_payload_B, stream_out_V_dest_V_1_sel)
    begin
        if ((stream_out_V_dest_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_dest_V_1_data_out <= stream_out_V_dest_V_1_payload_B;
        else 
            stream_out_V_dest_V_1_data_out <= stream_out_V_dest_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_dest_V_1_load_A <= (stream_out_V_dest_V_1_state_cmp_full and not(stream_out_V_dest_V_1_sel_wr));
    stream_out_V_dest_V_1_load_B <= (stream_out_V_dest_V_1_state_cmp_full and stream_out_V_dest_V_1_sel_wr);
    stream_out_V_dest_V_1_sel <= stream_out_V_dest_V_1_sel_rd;
    stream_out_V_dest_V_1_state_cmp_full <= '0' when (stream_out_V_dest_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_dest_V_1_vld_in_assign_proc : process(ap_CS_fsm_state7, and_ln46_fu_329_p2, ap_block_state7_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_io) and (ap_const_lv1_0 = and_ln46_fu_329_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            stream_out_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_dest_V_1_vld_out <= stream_out_V_dest_V_1_state(0);
    stream_out_V_id_V_1_ack_in <= stream_out_V_id_V_1_state(1);
    stream_out_V_id_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_id_V_1_data_out_assign_proc : process(stream_out_V_id_V_1_payload_A, stream_out_V_id_V_1_payload_B, stream_out_V_id_V_1_sel)
    begin
        if ((stream_out_V_id_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_id_V_1_data_out <= stream_out_V_id_V_1_payload_B;
        else 
            stream_out_V_id_V_1_data_out <= stream_out_V_id_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_id_V_1_load_A <= (stream_out_V_id_V_1_state_cmp_full and not(stream_out_V_id_V_1_sel_wr));
    stream_out_V_id_V_1_load_B <= (stream_out_V_id_V_1_state_cmp_full and stream_out_V_id_V_1_sel_wr);
    stream_out_V_id_V_1_sel <= stream_out_V_id_V_1_sel_rd;
    stream_out_V_id_V_1_state_cmp_full <= '0' when (stream_out_V_id_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_id_V_1_vld_in_assign_proc : process(ap_CS_fsm_state7, and_ln46_fu_329_p2, ap_block_state7_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_io) and (ap_const_lv1_0 = and_ln46_fu_329_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            stream_out_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_id_V_1_vld_out <= stream_out_V_id_V_1_state(0);
    stream_out_V_keep_V_1_ack_in <= stream_out_V_keep_V_1_state(1);
    stream_out_V_keep_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_keep_V_1_data_out_assign_proc : process(stream_out_V_keep_V_1_payload_A, stream_out_V_keep_V_1_payload_B, stream_out_V_keep_V_1_sel)
    begin
        if ((stream_out_V_keep_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_keep_V_1_data_out <= stream_out_V_keep_V_1_payload_B;
        else 
            stream_out_V_keep_V_1_data_out <= stream_out_V_keep_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_keep_V_1_load_A <= (stream_out_V_keep_V_1_state_cmp_full and not(stream_out_V_keep_V_1_sel_wr));
    stream_out_V_keep_V_1_load_B <= (stream_out_V_keep_V_1_state_cmp_full and stream_out_V_keep_V_1_sel_wr);
    stream_out_V_keep_V_1_sel <= stream_out_V_keep_V_1_sel_rd;
    stream_out_V_keep_V_1_state_cmp_full <= '0' when (stream_out_V_keep_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_state7, and_ln46_fu_329_p2, ap_block_state7_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_io) and (ap_const_lv1_0 = and_ln46_fu_329_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            stream_out_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_keep_V_1_vld_out <= stream_out_V_keep_V_1_state(0);
    stream_out_V_last_V_1_ack_in <= stream_out_V_last_V_1_state(1);
    stream_out_V_last_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_last_V_1_data_out_assign_proc : process(stream_out_V_last_V_1_payload_A, stream_out_V_last_V_1_payload_B, stream_out_V_last_V_1_sel)
    begin
        if ((stream_out_V_last_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_last_V_1_data_out <= stream_out_V_last_V_1_payload_B;
        else 
            stream_out_V_last_V_1_data_out <= stream_out_V_last_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_last_V_1_load_A <= (stream_out_V_last_V_1_state_cmp_full and not(stream_out_V_last_V_1_sel_wr));
    stream_out_V_last_V_1_load_B <= (stream_out_V_last_V_1_state_cmp_full and stream_out_V_last_V_1_sel_wr);
    stream_out_V_last_V_1_sel <= stream_out_V_last_V_1_sel_rd;
    stream_out_V_last_V_1_state_cmp_full <= '0' when (stream_out_V_last_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_state7, and_ln46_fu_329_p2, ap_block_state7_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_io) and (ap_const_lv1_0 = and_ln46_fu_329_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            stream_out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_last_V_1_vld_out <= stream_out_V_last_V_1_state(0);
    stream_out_V_strb_V_1_ack_in <= stream_out_V_strb_V_1_state(1);
    stream_out_V_strb_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_strb_V_1_data_out_assign_proc : process(stream_out_V_strb_V_1_payload_A, stream_out_V_strb_V_1_payload_B, stream_out_V_strb_V_1_sel)
    begin
        if ((stream_out_V_strb_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_strb_V_1_data_out <= stream_out_V_strb_V_1_payload_B;
        else 
            stream_out_V_strb_V_1_data_out <= stream_out_V_strb_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_strb_V_1_load_A <= (stream_out_V_strb_V_1_state_cmp_full and not(stream_out_V_strb_V_1_sel_wr));
    stream_out_V_strb_V_1_load_B <= (stream_out_V_strb_V_1_state_cmp_full and stream_out_V_strb_V_1_sel_wr);
    stream_out_V_strb_V_1_sel <= stream_out_V_strb_V_1_sel_rd;
    stream_out_V_strb_V_1_state_cmp_full <= '0' when (stream_out_V_strb_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_strb_V_1_vld_in_assign_proc : process(ap_CS_fsm_state7, and_ln46_fu_329_p2, ap_block_state7_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_io) and (ap_const_lv1_0 = and_ln46_fu_329_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            stream_out_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_strb_V_1_vld_out <= stream_out_V_strb_V_1_state(0);
    stream_out_V_user_V_1_ack_in <= stream_out_V_user_V_1_state(1);
    stream_out_V_user_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_user_V_1_data_out_assign_proc : process(stream_out_V_user_V_1_payload_A, stream_out_V_user_V_1_payload_B, stream_out_V_user_V_1_sel)
    begin
        if ((stream_out_V_user_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_user_V_1_data_out <= stream_out_V_user_V_1_payload_B;
        else 
            stream_out_V_user_V_1_data_out <= stream_out_V_user_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_user_V_1_load_A <= (stream_out_V_user_V_1_state_cmp_full and not(stream_out_V_user_V_1_sel_wr));
    stream_out_V_user_V_1_load_B <= (stream_out_V_user_V_1_state_cmp_full and stream_out_V_user_V_1_sel_wr);
    stream_out_V_user_V_1_sel <= stream_out_V_user_V_1_sel_rd;
    stream_out_V_user_V_1_state_cmp_full <= '0' when (stream_out_V_user_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_user_V_1_vld_in_assign_proc : process(ap_CS_fsm_state7, and_ln46_fu_329_p2, ap_block_state7_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_io) and (ap_const_lv1_0 = and_ln46_fu_329_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            stream_out_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_user_V_1_vld_out <= stream_out_V_user_V_1_state(0);
    tmp_data_V_3_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_V_2_reg_158),32));
    tmp_last_V_fu_333_p2 <= "1" when (ip_index = add_ln48_reg_381) else "0";
    zext_ln43_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(random_value),64));
end behav;
