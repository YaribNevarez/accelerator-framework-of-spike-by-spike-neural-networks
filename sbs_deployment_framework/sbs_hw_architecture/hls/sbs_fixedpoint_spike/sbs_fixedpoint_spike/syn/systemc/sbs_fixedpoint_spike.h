// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sbs_fixedpoint_spike_HH_
#define _sbs_fixedpoint_spike_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sbs_fixedpoint_spike_add_64ns_64ns_64_2_1.h"
#include "sbs_fixedpoint_spike_CRTL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CRTL_BUS_DATA_WIDTH = 32>
struct sbs_fixedpoint_spike : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > stream_in_TDATA;
    sc_in< sc_logic > stream_in_TVALID;
    sc_out< sc_logic > stream_in_TREADY;
    sc_in< sc_lv<4> > stream_in_TKEEP;
    sc_in< sc_lv<4> > stream_in_TSTRB;
    sc_in< sc_lv<2> > stream_in_TUSER;
    sc_in< sc_lv<1> > stream_in_TLAST;
    sc_in< sc_lv<5> > stream_in_TID;
    sc_in< sc_lv<6> > stream_in_TDEST;
    sc_out< sc_lv<32> > stream_out_TDATA;
    sc_out< sc_logic > stream_out_TVALID;
    sc_in< sc_logic > stream_out_TREADY;
    sc_out< sc_lv<4> > stream_out_TKEEP;
    sc_out< sc_lv<4> > stream_out_TSTRB;
    sc_out< sc_lv<2> > stream_out_TUSER;
    sc_out< sc_lv<1> > stream_out_TLAST;
    sc_out< sc_lv<5> > stream_out_TID;
    sc_out< sc_lv<6> > stream_out_TDEST;
    sc_in< sc_logic > s_axi_CRTL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CRTL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH/8> > s_axi_CRTL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CRTL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CRTL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CRTL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    sbs_fixedpoint_spike(sc_module_name name);
    SC_HAS_PROCESS(sbs_fixedpoint_spike);

    ~sbs_fixedpoint_spike();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sbs_fixedpoint_spike_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>* sbs_fixedpoint_spike_CRTL_BUS_s_axi_U;
    sbs_fixedpoint_spike_add_64ns_64ns_64_2_1<1,2,64,64,64>* sbs_fixedpoint_spike_add_64ns_64ns_64_2_1_U1;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > stream_in_V_data_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_data_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_data_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_data_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > stream_in_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > stream_in_V_data_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel;
    sc_signal< sc_logic > stream_in_V_data_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_data_V_0_state;
    sc_signal< sc_logic > stream_in_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > stream_in_V_keep_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_keep_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_keep_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_keep_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > stream_in_V_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > stream_in_V_keep_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_keep_V_0_sel;
    sc_signal< sc_logic > stream_in_V_keep_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_keep_V_0_state;
    sc_signal< sc_logic > stream_in_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > stream_in_V_strb_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_strb_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_strb_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_strb_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > stream_in_V_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > stream_in_V_strb_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_strb_V_0_sel;
    sc_signal< sc_logic > stream_in_V_strb_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_strb_V_0_state;
    sc_signal< sc_logic > stream_in_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_user_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_user_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_user_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_user_V_0_ack_out;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_payload_A;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_user_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_user_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_user_V_0_sel;
    sc_signal< sc_logic > stream_in_V_user_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_state;
    sc_signal< sc_logic > stream_in_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > stream_in_V_id_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_id_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_id_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_id_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_id_V_0_ack_out;
    sc_signal< sc_lv<5> > stream_in_V_id_V_0_payload_A;
    sc_signal< sc_lv<5> > stream_in_V_id_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_id_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_id_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_id_V_0_sel;
    sc_signal< sc_logic > stream_in_V_id_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_id_V_0_state;
    sc_signal< sc_logic > stream_in_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<6> > stream_in_V_dest_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_dest_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_dest_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_dest_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_dest_V_0_ack_out;
    sc_signal< sc_lv<6> > stream_in_V_dest_V_0_payload_A;
    sc_signal< sc_lv<6> > stream_in_V_dest_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_dest_V_0_sel;
    sc_signal< sc_logic > stream_in_V_dest_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_dest_V_0_state;
    sc_signal< sc_logic > stream_in_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_data_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_data_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_data_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_data_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_data_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_data_V_1_sel;
    sc_signal< sc_logic > stream_out_V_data_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_data_V_1_state;
    sc_signal< sc_logic > stream_out_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > stream_out_V_keep_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_keep_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_keep_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_keep_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_keep_V_1_ack_out;
    sc_signal< sc_lv<4> > stream_out_V_keep_V_1_payload_A;
    sc_signal< sc_lv<4> > stream_out_V_keep_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_keep_V_1_sel;
    sc_signal< sc_logic > stream_out_V_keep_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_keep_V_1_state;
    sc_signal< sc_logic > stream_out_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > stream_out_V_strb_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_strb_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_strb_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_strb_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_strb_V_1_ack_out;
    sc_signal< sc_lv<4> > stream_out_V_strb_V_1_payload_A;
    sc_signal< sc_lv<4> > stream_out_V_strb_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_strb_V_1_sel;
    sc_signal< sc_logic > stream_out_V_strb_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_strb_V_1_state;
    sc_signal< sc_logic > stream_out_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_user_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_user_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_user_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_user_V_1_ack_out;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_payload_A;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_user_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_user_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_user_V_1_sel;
    sc_signal< sc_logic > stream_out_V_user_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_state;
    sc_signal< sc_logic > stream_out_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_last_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_last_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_last_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_last_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_last_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_last_V_1_sel;
    sc_signal< sc_logic > stream_out_V_last_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_last_V_1_state;
    sc_signal< sc_logic > stream_out_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > stream_out_V_id_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_id_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_id_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_id_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_id_V_1_ack_out;
    sc_signal< sc_lv<5> > stream_out_V_id_V_1_payload_A;
    sc_signal< sc_lv<5> > stream_out_V_id_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_id_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_id_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_id_V_1_sel;
    sc_signal< sc_logic > stream_out_V_id_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_id_V_1_state;
    sc_signal< sc_logic > stream_out_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > stream_out_V_dest_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_dest_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_dest_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_dest_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_dest_V_1_ack_out;
    sc_signal< sc_lv<6> > stream_out_V_dest_V_1_payload_A;
    sc_signal< sc_lv<6> > stream_out_V_dest_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_dest_V_1_sel;
    sc_signal< sc_logic > stream_out_V_dest_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_dest_V_1_state;
    sc_signal< sc_logic > stream_out_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<32> > layerSize;
    sc_signal< sc_lv<32> > vectorSize;
    sc_signal< sc_lv<32> > ip_index;
    sc_signal< sc_lv<4> > channel_keep_V;
    sc_signal< sc_lv<4> > channel_strb_V;
    sc_signal< sc_lv<2> > channel_user_V;
    sc_signal< sc_lv<5> > channel_id_V;
    sc_signal< sc_lv<6> > channel_dest_V;
    sc_signal< sc_lv<32> > random_value;
    sc_signal< sc_lv<64> > sum;
    sc_signal< sc_logic > stream_in_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln26_fu_193_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln40_fu_270_p2;
    sc_signal< sc_logic > stream_out_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > and_ln46_fu_329_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln43_reg_415;
    sc_signal< sc_lv<1> > and_ln46_reg_445;
    sc_signal< sc_lv<32> > vectorSize_read_reg_364;
    sc_signal< sc_lv<32> > layerSize_read_reg_370;
    sc_signal< sc_lv<32> > add_ln46_fu_177_p2;
    sc_signal< sc_lv<32> > add_ln46_reg_376;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > add_ln48_fu_182_p2;
    sc_signal< sc_lv<32> > add_ln48_reg_381;
    sc_signal< sc_lv<32> > tmp_data_V_3_fu_266_p1;
    sc_signal< sc_lv<32> > tmp_data_V_3_reg_392;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<31> > add_ln40_fu_275_p2;
    sc_signal< sc_lv<31> > add_ln40_reg_400;
    sc_signal< sc_lv<64> > zext_ln43_fu_289_p1;
    sc_signal< sc_lv<64> > zext_ln43_reg_410;
    sc_signal< sc_lv<1> > icmp_ln43_fu_293_p2;
    sc_signal< sc_lv<1> > icmp_ln46_1_fu_309_p2;
    sc_signal< sc_lv<1> > icmp_ln46_1_reg_424;
    sc_signal< sc_lv<32> > add_ln26_fu_314_p2;
    sc_signal< sc_lv<64> > grp_fu_303_p2;
    sc_signal< sc_lv<64> > add_ln45_reg_434;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln46_fu_325_p2;
    sc_signal< sc_lv<1> > icmp_ln46_reg_440;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< bool > ap_block_state7_io;
    sc_signal< sc_lv<1> > tmp_last_V_fu_333_p2;
    sc_signal< sc_lv<32> > empty_reg_147;
    sc_signal< sc_lv<31> > tmp_data_V_2_reg_158;
    sc_signal< bool > ap_block_state3;
    sc_signal< bool > ap_predicate_op93_write_state8;
    sc_signal< bool > ap_block_state8_io;
    sc_signal< sc_lv<1> > icmp_ln29_fu_198_p2;
    sc_signal< sc_lv<64> > grp_fu_303_p1;
    sc_signal< sc_logic > grp_fu_303_ce;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const bool ap_const_boolean_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<31> ap_const_lv31_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln26_fu_314_p2();
    void thread_add_ln40_fu_275_p2();
    void thread_add_ln46_fu_177_p2();
    void thread_add_ln48_fu_182_p2();
    void thread_and_ln46_fu_329_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_state3();
    void thread_ap_block_state4();
    void thread_ap_block_state7_io();
    void thread_ap_block_state8_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op93_write_state8();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_303_ce();
    void thread_grp_fu_303_p1();
    void thread_icmp_ln26_fu_193_p2();
    void thread_icmp_ln29_fu_198_p2();
    void thread_icmp_ln40_fu_270_p2();
    void thread_icmp_ln43_fu_293_p2();
    void thread_icmp_ln46_1_fu_309_p2();
    void thread_icmp_ln46_fu_325_p2();
    void thread_stream_in_TDATA_blk_n();
    void thread_stream_in_TREADY();
    void thread_stream_in_V_data_V_0_ack_in();
    void thread_stream_in_V_data_V_0_ack_out();
    void thread_stream_in_V_data_V_0_data_out();
    void thread_stream_in_V_data_V_0_load_A();
    void thread_stream_in_V_data_V_0_load_B();
    void thread_stream_in_V_data_V_0_sel();
    void thread_stream_in_V_data_V_0_state_cmp_full();
    void thread_stream_in_V_data_V_0_vld_in();
    void thread_stream_in_V_data_V_0_vld_out();
    void thread_stream_in_V_dest_V_0_ack_in();
    void thread_stream_in_V_dest_V_0_ack_out();
    void thread_stream_in_V_dest_V_0_data_out();
    void thread_stream_in_V_dest_V_0_load_A();
    void thread_stream_in_V_dest_V_0_load_B();
    void thread_stream_in_V_dest_V_0_sel();
    void thread_stream_in_V_dest_V_0_state_cmp_full();
    void thread_stream_in_V_dest_V_0_vld_in();
    void thread_stream_in_V_dest_V_0_vld_out();
    void thread_stream_in_V_id_V_0_ack_in();
    void thread_stream_in_V_id_V_0_ack_out();
    void thread_stream_in_V_id_V_0_data_out();
    void thread_stream_in_V_id_V_0_load_A();
    void thread_stream_in_V_id_V_0_load_B();
    void thread_stream_in_V_id_V_0_sel();
    void thread_stream_in_V_id_V_0_state_cmp_full();
    void thread_stream_in_V_id_V_0_vld_in();
    void thread_stream_in_V_id_V_0_vld_out();
    void thread_stream_in_V_keep_V_0_ack_in();
    void thread_stream_in_V_keep_V_0_ack_out();
    void thread_stream_in_V_keep_V_0_data_out();
    void thread_stream_in_V_keep_V_0_load_A();
    void thread_stream_in_V_keep_V_0_load_B();
    void thread_stream_in_V_keep_V_0_sel();
    void thread_stream_in_V_keep_V_0_state_cmp_full();
    void thread_stream_in_V_keep_V_0_vld_in();
    void thread_stream_in_V_keep_V_0_vld_out();
    void thread_stream_in_V_strb_V_0_ack_in();
    void thread_stream_in_V_strb_V_0_ack_out();
    void thread_stream_in_V_strb_V_0_data_out();
    void thread_stream_in_V_strb_V_0_load_A();
    void thread_stream_in_V_strb_V_0_load_B();
    void thread_stream_in_V_strb_V_0_sel();
    void thread_stream_in_V_strb_V_0_state_cmp_full();
    void thread_stream_in_V_strb_V_0_vld_in();
    void thread_stream_in_V_strb_V_0_vld_out();
    void thread_stream_in_V_user_V_0_ack_in();
    void thread_stream_in_V_user_V_0_ack_out();
    void thread_stream_in_V_user_V_0_data_out();
    void thread_stream_in_V_user_V_0_load_A();
    void thread_stream_in_V_user_V_0_load_B();
    void thread_stream_in_V_user_V_0_sel();
    void thread_stream_in_V_user_V_0_state_cmp_full();
    void thread_stream_in_V_user_V_0_vld_in();
    void thread_stream_in_V_user_V_0_vld_out();
    void thread_stream_out_TDATA();
    void thread_stream_out_TDATA_blk_n();
    void thread_stream_out_TDEST();
    void thread_stream_out_TID();
    void thread_stream_out_TKEEP();
    void thread_stream_out_TLAST();
    void thread_stream_out_TSTRB();
    void thread_stream_out_TUSER();
    void thread_stream_out_TVALID();
    void thread_stream_out_V_data_V_1_ack_in();
    void thread_stream_out_V_data_V_1_ack_out();
    void thread_stream_out_V_data_V_1_data_out();
    void thread_stream_out_V_data_V_1_load_A();
    void thread_stream_out_V_data_V_1_load_B();
    void thread_stream_out_V_data_V_1_sel();
    void thread_stream_out_V_data_V_1_state_cmp_full();
    void thread_stream_out_V_data_V_1_vld_in();
    void thread_stream_out_V_data_V_1_vld_out();
    void thread_stream_out_V_dest_V_1_ack_in();
    void thread_stream_out_V_dest_V_1_ack_out();
    void thread_stream_out_V_dest_V_1_data_out();
    void thread_stream_out_V_dest_V_1_load_A();
    void thread_stream_out_V_dest_V_1_load_B();
    void thread_stream_out_V_dest_V_1_sel();
    void thread_stream_out_V_dest_V_1_state_cmp_full();
    void thread_stream_out_V_dest_V_1_vld_in();
    void thread_stream_out_V_dest_V_1_vld_out();
    void thread_stream_out_V_id_V_1_ack_in();
    void thread_stream_out_V_id_V_1_ack_out();
    void thread_stream_out_V_id_V_1_data_out();
    void thread_stream_out_V_id_V_1_load_A();
    void thread_stream_out_V_id_V_1_load_B();
    void thread_stream_out_V_id_V_1_sel();
    void thread_stream_out_V_id_V_1_state_cmp_full();
    void thread_stream_out_V_id_V_1_vld_in();
    void thread_stream_out_V_id_V_1_vld_out();
    void thread_stream_out_V_keep_V_1_ack_in();
    void thread_stream_out_V_keep_V_1_ack_out();
    void thread_stream_out_V_keep_V_1_data_out();
    void thread_stream_out_V_keep_V_1_load_A();
    void thread_stream_out_V_keep_V_1_load_B();
    void thread_stream_out_V_keep_V_1_sel();
    void thread_stream_out_V_keep_V_1_state_cmp_full();
    void thread_stream_out_V_keep_V_1_vld_in();
    void thread_stream_out_V_keep_V_1_vld_out();
    void thread_stream_out_V_last_V_1_ack_in();
    void thread_stream_out_V_last_V_1_ack_out();
    void thread_stream_out_V_last_V_1_data_out();
    void thread_stream_out_V_last_V_1_load_A();
    void thread_stream_out_V_last_V_1_load_B();
    void thread_stream_out_V_last_V_1_sel();
    void thread_stream_out_V_last_V_1_state_cmp_full();
    void thread_stream_out_V_last_V_1_vld_in();
    void thread_stream_out_V_last_V_1_vld_out();
    void thread_stream_out_V_strb_V_1_ack_in();
    void thread_stream_out_V_strb_V_1_ack_out();
    void thread_stream_out_V_strb_V_1_data_out();
    void thread_stream_out_V_strb_V_1_load_A();
    void thread_stream_out_V_strb_V_1_load_B();
    void thread_stream_out_V_strb_V_1_sel();
    void thread_stream_out_V_strb_V_1_state_cmp_full();
    void thread_stream_out_V_strb_V_1_vld_in();
    void thread_stream_out_V_strb_V_1_vld_out();
    void thread_stream_out_V_user_V_1_ack_in();
    void thread_stream_out_V_user_V_1_ack_out();
    void thread_stream_out_V_user_V_1_data_out();
    void thread_stream_out_V_user_V_1_load_A();
    void thread_stream_out_V_user_V_1_load_B();
    void thread_stream_out_V_user_V_1_sel();
    void thread_stream_out_V_user_V_1_state_cmp_full();
    void thread_stream_out_V_user_V_1_vld_in();
    void thread_stream_out_V_user_V_1_vld_out();
    void thread_tmp_data_V_3_fu_266_p1();
    void thread_tmp_last_V_fu_333_p2();
    void thread_zext_ln43_fu_289_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
