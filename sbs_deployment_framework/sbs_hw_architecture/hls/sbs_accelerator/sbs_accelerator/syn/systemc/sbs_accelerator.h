// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sbs_accelerator_HH_
#define _sbs_accelerator_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sbs_accelerator_feOg.h"
#include "sbs_accelerator_ffYi.h"
#include "sbs_accelerator_fg8j.h"
#include "sbs_accelerator_fhbi.h"
#include "sbs_accelerator_sbkb.h"
#include "sbs_accelerator_scud.h"
#include "sbs_accelerator_tdEe.h"
#include "sbs_accelerator_CRTL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CRTL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CRTL_BUS_DATA_WIDTH = 32>
struct sbs_accelerator : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > stream_in_TDATA;
    sc_in< sc_logic > stream_in_TVALID;
    sc_out< sc_logic > stream_in_TREADY;
    sc_in< sc_lv<4> > stream_in_TKEEP;
    sc_in< sc_lv<4> > stream_in_TSTRB;
    sc_in< sc_lv<2> > stream_in_TUSER;
    sc_in< sc_lv<1> > stream_in_TLAST;
    sc_in< sc_lv<5> > stream_in_TID;
    sc_in< sc_lv<6> > stream_in_TDEST;
    sc_out< sc_lv<32> > stream_out_TDATA;
    sc_out< sc_logic > stream_out_TVALID;
    sc_in< sc_logic > stream_out_TREADY;
    sc_out< sc_lv<4> > stream_out_TKEEP;
    sc_out< sc_lv<4> > stream_out_TSTRB;
    sc_out< sc_lv<2> > stream_out_TUSER;
    sc_out< sc_lv<1> > stream_out_TLAST;
    sc_out< sc_lv<5> > stream_out_TID;
    sc_out< sc_lv<6> > stream_out_TDEST;
    sc_in< sc_logic > s_axi_CRTL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CRTL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH/8> > s_axi_CRTL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CRTL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CRTL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CRTL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    sbs_accelerator(sc_module_name name);
    SC_HAS_PROCESS(sbs_accelerator);

    ~sbs_accelerator();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sbs_accelerator_sbkb* state_vector_U;
    sbs_accelerator_scud* spike_matrix_U;
    sbs_accelerator_tdEe* temp_data_U;
    sbs_accelerator_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>* sbs_accelerator_CRTL_BUS_s_axi_U;
    sbs_accelerator_feOg<1,10,32,32,32>* sbs_accelerator_feOg_U1;
    sbs_accelerator_ffYi<1,8,32,32,32>* sbs_accelerator_ffYi_U2;
    sbs_accelerator_ffYi<1,8,32,32,32>* sbs_accelerator_ffYi_U3;
    sbs_accelerator_fg8j<1,30,32,32,32>* sbs_accelerator_fg8j_U4;
    sbs_accelerator_fhbi<1,4,32,32,1>* sbs_accelerator_fhbi_U5;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<107> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > stream_in_V_data_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_data_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_data_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_data_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > stream_in_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > stream_in_V_data_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel;
    sc_signal< sc_logic > stream_in_V_data_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_data_V_0_state;
    sc_signal< sc_logic > stream_in_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > stream_in_V_keep_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_keep_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_keep_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_keep_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > stream_in_V_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > stream_in_V_keep_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_keep_V_0_sel;
    sc_signal< sc_logic > stream_in_V_keep_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_keep_V_0_state;
    sc_signal< sc_logic > stream_in_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > stream_in_V_strb_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_strb_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_strb_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_strb_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > stream_in_V_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > stream_in_V_strb_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_strb_V_0_sel;
    sc_signal< sc_logic > stream_in_V_strb_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_strb_V_0_state;
    sc_signal< sc_logic > stream_in_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_user_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_user_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_user_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_user_V_0_ack_out;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_payload_A;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_user_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_user_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_user_V_0_sel;
    sc_signal< sc_logic > stream_in_V_user_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_state;
    sc_signal< sc_logic > stream_in_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > stream_in_V_last_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_last_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_last_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_last_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_last_V_0_ack_out;
    sc_signal< sc_lv<1> > stream_in_V_last_V_0_payload_A;
    sc_signal< sc_lv<1> > stream_in_V_last_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_last_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_last_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_last_V_0_sel;
    sc_signal< sc_logic > stream_in_V_last_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_last_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_last_V_0_state;
    sc_signal< sc_logic > stream_in_V_last_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > stream_in_V_id_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_id_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_id_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_id_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_id_V_0_ack_out;
    sc_signal< sc_lv<5> > stream_in_V_id_V_0_payload_A;
    sc_signal< sc_lv<5> > stream_in_V_id_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_id_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_id_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_id_V_0_sel;
    sc_signal< sc_logic > stream_in_V_id_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_id_V_0_state;
    sc_signal< sc_logic > stream_in_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<6> > stream_in_V_dest_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_dest_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_dest_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_dest_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_dest_V_0_ack_out;
    sc_signal< sc_lv<6> > stream_in_V_dest_V_0_payload_A;
    sc_signal< sc_lv<6> > stream_in_V_dest_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_dest_V_0_sel;
    sc_signal< sc_logic > stream_in_V_dest_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_dest_V_0_state;
    sc_signal< sc_logic > stream_in_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_data_in;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_data_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_data_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_data_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_data_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_data_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_data_V_1_sel;
    sc_signal< sc_logic > stream_out_V_data_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_data_V_1_state;
    sc_signal< sc_logic > stream_out_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > stream_out_V_keep_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_keep_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_keep_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_keep_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_keep_V_1_ack_out;
    sc_signal< sc_lv<4> > stream_out_V_keep_V_1_payload_A;
    sc_signal< sc_lv<4> > stream_out_V_keep_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_keep_V_1_sel;
    sc_signal< sc_logic > stream_out_V_keep_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_keep_V_1_state;
    sc_signal< sc_logic > stream_out_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > stream_out_V_strb_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_strb_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_strb_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_strb_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_strb_V_1_ack_out;
    sc_signal< sc_lv<4> > stream_out_V_strb_V_1_payload_A;
    sc_signal< sc_lv<4> > stream_out_V_strb_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_strb_V_1_sel;
    sc_signal< sc_logic > stream_out_V_strb_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_strb_V_1_state;
    sc_signal< sc_logic > stream_out_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_user_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_user_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_user_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_user_V_1_ack_out;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_payload_A;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_user_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_user_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_user_V_1_sel;
    sc_signal< sc_logic > stream_out_V_user_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_state;
    sc_signal< sc_logic > stream_out_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_data_in;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_last_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_last_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_last_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_last_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_last_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_last_V_1_sel;
    sc_signal< sc_logic > stream_out_V_last_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_last_V_1_state;
    sc_signal< sc_logic > stream_out_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > stream_out_V_id_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_id_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_id_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_id_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_id_V_1_ack_out;
    sc_signal< sc_lv<5> > stream_out_V_id_V_1_payload_A;
    sc_signal< sc_lv<5> > stream_out_V_id_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_id_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_id_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_id_V_1_sel;
    sc_signal< sc_logic > stream_out_V_id_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_id_V_1_state;
    sc_signal< sc_logic > stream_out_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > stream_out_V_dest_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_dest_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_dest_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_dest_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_dest_V_1_ack_out;
    sc_signal< sc_lv<6> > stream_out_V_dest_V_1_payload_A;
    sc_signal< sc_lv<6> > stream_out_V_dest_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_dest_V_1_sel;
    sc_signal< sc_logic > stream_out_V_dest_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_dest_V_1_state;
    sc_signal< sc_logic > stream_out_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<32> > layerSize;
    sc_signal< sc_lv<32> > kernelSize;
    sc_signal< sc_lv<32> > vectorSize;
    sc_signal< sc_lv<32> > epsilon;
    sc_signal< sc_lv<32> > ip_index;
    sc_signal< sc_lv<4> > channel_keep_V;
    sc_signal< sc_lv<4> > channel_strb_V;
    sc_signal< sc_lv<2> > channel_user_V;
    sc_signal< sc_lv<1> > channel_last_V;
    sc_signal< sc_lv<5> > channel_id_V;
    sc_signal< sc_lv<6> > channel_dest_V;
    sc_signal< sc_lv<10> > state_vector_address0;
    sc_signal< sc_logic > state_vector_ce0;
    sc_signal< sc_logic > state_vector_we0;
    sc_signal< sc_lv<32> > state_vector_d0;
    sc_signal< sc_lv<32> > state_vector_q0;
    sc_signal< sc_lv<10> > state_vector_address1;
    sc_signal< sc_logic > state_vector_ce1;
    sc_signal< sc_logic > state_vector_we1;
    sc_signal< sc_lv<32> > state_vector_q1;
    sc_signal< sc_lv<12> > spike_matrix_address0;
    sc_signal< sc_logic > spike_matrix_ce0;
    sc_signal< sc_logic > spike_matrix_we0;
    sc_signal< sc_lv<31> > spike_matrix_q0;
    sc_signal< sc_lv<10> > temp_data_address0;
    sc_signal< sc_logic > temp_data_ce0;
    sc_signal< sc_logic > temp_data_we0;
    sc_signal< sc_lv<32> > temp_data_q0;
    sc_signal< sc_logic > stream_in_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<1> > tmp_11_reg_985;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_pp1_stage2;
    sc_signal< sc_lv<1> > tmp_22_reg_1050;
    sc_signal< sc_logic > stream_out_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp3_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter1;
    sc_signal< bool > ap_block_pp3_stage0;
    sc_signal< sc_lv<1> > tmp_24_reg_1123;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter2;
    sc_signal< sc_lv<1> > ap_reg_pp3_iter1_tmp_24_reg_1123;
    sc_signal< sc_logic > ap_CS_fsm_pp4_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter1;
    sc_signal< bool > ap_block_pp4_stage0;
    sc_signal< sc_lv<1> > tmp_s_reg_1152;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter2;
    sc_signal< sc_lv<1> > ap_reg_pp4_iter1_tmp_s_reg_1152;
    sc_signal< sc_lv<32> > sum_load_reg_286;
    sc_signal< sc_lv<31> > i_load_1_reg_298;
    sc_signal< sc_lv<31> > ap_reg_pp0_iter1_i_load_1_reg_298;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state44_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state56_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > sum_load_1_reg_334;
    sc_signal< sc_lv<31> > i_load_2_reg_346;
    sc_signal< sc_lv<31> > tmp_35_reg_357;
    sc_signal< sc_lv<31> > i_load_3_reg_368;
    sc_signal< sc_lv<31> > i_load_reg_379;
    sc_signal< sc_lv<32> > grp_fu_390_p2;
    sc_signal< sc_lv<32> > reg_452;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< bool > ap_block_state118_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state119_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state120_pp2_stage0_iter2;
    sc_signal< bool > ap_block_state121_pp2_stage0_iter3;
    sc_signal< bool > ap_block_state122_pp2_stage0_iter4;
    sc_signal< bool > ap_block_state123_pp2_stage0_iter5;
    sc_signal< bool > ap_block_state124_pp2_stage0_iter6;
    sc_signal< bool > ap_block_state125_pp2_stage0_iter7;
    sc_signal< bool > ap_block_state126_pp2_stage0_iter8;
    sc_signal< bool > ap_block_state127_pp2_stage0_iter9;
    sc_signal< bool > ap_block_state128_pp2_stage0_iter10;
    sc_signal< bool > ap_block_state129_pp2_stage0_iter11;
    sc_signal< bool > ap_block_state130_pp2_stage0_iter12;
    sc_signal< bool > ap_block_state131_pp2_stage0_iter13;
    sc_signal< bool > ap_block_state132_pp2_stage0_iter14;
    sc_signal< bool > ap_block_state133_pp2_stage0_iter15;
    sc_signal< bool > ap_block_state134_pp2_stage0_iter16;
    sc_signal< bool > ap_block_state135_pp2_stage0_iter17;
    sc_signal< bool > ap_block_state136_pp2_stage0_iter18;
    sc_signal< bool > ap_block_state137_pp2_stage0_iter19;
    sc_signal< bool > ap_block_state138_pp2_stage0_iter20;
    sc_signal< bool > ap_block_state139_pp2_stage0_iter21;
    sc_signal< bool > ap_block_state140_pp2_stage0_iter22;
    sc_signal< bool > ap_block_state141_pp2_stage0_iter23;
    sc_signal< bool > ap_block_state142_pp2_stage0_iter24;
    sc_signal< bool > ap_block_state143_pp2_stage0_iter25;
    sc_signal< bool > ap_block_state144_pp2_stage0_iter26;
    sc_signal< bool > ap_block_state145_pp2_stage0_iter27;
    sc_signal< bool > ap_block_state146_pp2_stage0_iter28;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > tmp_51_reg_1014;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter19;
    sc_signal< sc_lv<1> > tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter18_tmp_36_reg_1093;
    sc_signal< sc_lv<32> > reg_459;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< bool > ap_block_state65_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state75_pp1_stage1_iter1;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter9;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter8_tmp_36_reg_1093;
    sc_signal< sc_lv<32> > grp_fu_398_p2;
    sc_signal< sc_lv<32> > reg_465;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage9;
    sc_signal< bool > ap_block_state73_pp1_stage9_iter0;
    sc_signal< bool > ap_block_state83_pp1_stage9_iter1;
    sc_signal< bool > ap_block_pp1_stage9_11001;
    sc_signal< bool > ap_block_state148_pp3_stage0_iter0;
    sc_signal< bool > ap_block_state149_pp3_stage0_iter1;
    sc_signal< bool > ap_block_state149_io;
    sc_signal< bool > ap_block_state150_pp3_stage0_iter2;
    sc_signal< bool > ap_block_state150_io;
    sc_signal< bool > ap_block_pp3_stage0_11001;
    sc_signal< bool > ap_block_state152_pp4_stage0_iter0;
    sc_signal< bool > ap_block_state153_pp4_stage0_iter1;
    sc_signal< bool > ap_block_state153_io;
    sc_signal< bool > ap_block_state154_pp4_stage0_iter2;
    sc_signal< bool > ap_block_state154_io;
    sc_signal< bool > ap_block_pp4_stage0_11001;
    sc_signal< sc_lv<32> > epsilon_read_reg_914;
    sc_signal< sc_lv<32> > vectorSize_read_reg_920;
    sc_signal< sc_lv<32> > kernelSize_read_reg_929;
    sc_signal< sc_lv<32> > layerSize_read_reg_934;
    sc_signal< sc_lv<32> > grp_fu_406_p2;
    sc_signal< sc_lv<32> > reverse_epsilon_reg_941;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_lv<32> > tmp_2_fu_496_p2;
    sc_signal< sc_lv<32> > tmp_2_reg_946;
    sc_signal< sc_lv<1> > tmp_4_fu_507_p2;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_lv<1> > tmp_5_fu_512_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_955;
    sc_signal< sc_lv<32> > tmp_6_fu_518_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_959;
    sc_signal< sc_lv<32> > tmp_data_V_reg_964;
    sc_signal< sc_lv<32> > tmp_7_fu_583_p1;
    sc_signal< sc_lv<32> > tmp_7_reg_969;
    sc_signal< sc_lv<1> > notrhs8_fu_591_p2;
    sc_signal< sc_lv<1> > notrhs8_reg_975;
    sc_signal< sc_lv<32> > i_load_1_cast_fu_597_p1;
    sc_signal< sc_lv<32> > i_load_1_cast_reg_980;
    sc_signal< sc_lv<1> > tmp_11_fu_601_p2;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_11_reg_985;
    sc_signal< sc_lv<31> > tmp_20_fu_606_p2;
    sc_signal< sc_lv<31> > tmp_20_reg_989;
    sc_signal< sc_lv<1> > notlhs7_fu_621_p2;
    sc_signal< sc_lv<1> > notlhs7_reg_994;
    sc_signal< sc_lv<1> > notlhs5_fu_645_p2;
    sc_signal< sc_lv<1> > notlhs5_reg_999;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state46_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state58_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<1> > notrhs6_fu_651_p2;
    sc_signal< sc_lv<1> > notrhs6_reg_1004;
    sc_signal< sc_lv<32> > tmp_12_fu_657_p1;
    sc_signal< bool > ap_block_state47_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state59_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<1> > tmp_51_fu_682_p2;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_51_reg_1014;
    sc_signal< sc_lv<1> > tmp_17_fu_688_p2;
    sc_signal< sc_lv<1> > tmp_17_reg_1018;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_17_reg_1018;
    sc_signal< sc_lv<1> > notlhs1_fu_710_p2;
    sc_signal< sc_lv<1> > notlhs1_reg_1023;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state45_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state57_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > notrhs2_fu_716_p2;
    sc_signal< sc_lv<1> > notrhs2_reg_1028;
    sc_signal< sc_lv<1> > grp_fu_412_p2;
    sc_signal< sc_lv<1> > tmp_55_reg_1033;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state48_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state60_pp0_stage4_iter1;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<1> > tmp_18_fu_745_p2;
    sc_signal< sc_logic > ap_CS_fsm_state63;
    sc_signal< sc_lv<31> > tmp_42_fu_750_p2;
    sc_signal< sc_lv<31> > tmp_42_reg_1045;
    sc_signal< sc_lv<1> > tmp_22_fu_760_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state64_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state74_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp1_iter1_tmp_22_reg_1050;
    sc_signal< sc_lv<31> > tmp_29_fu_765_p2;
    sc_signal< sc_lv<31> > tmp_29_reg_1054;
    sc_signal< sc_lv<64> > tmp_25_fu_771_p1;
    sc_signal< sc_lv<64> > tmp_25_reg_1059;
    sc_signal< sc_lv<32> > tmp_26_fu_776_p1;
    sc_signal< bool > ap_block_state66_pp1_stage2_iter0;
    sc_signal< bool > ap_block_state76_pp1_stage2_iter1;
    sc_signal< bool > ap_block_pp1_stage2_11001;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > tmp_60_reg_1079;
    sc_signal< sc_logic > ap_CS_fsm_state87;
    sc_signal< sc_lv<1> > tmp_61_fu_817_p2;
    sc_signal< sc_logic > ap_CS_fsm_state88;
    sc_signal< sc_lv<32> > tmp_34_reg_1088;
    sc_signal< sc_logic > ap_CS_fsm_state117;
    sc_signal< sc_lv<1> > tmp_36_fu_826_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter1_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter2_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter3_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter4_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter5_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter6_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter7_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter9_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter10_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter11_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter12_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter13_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter14_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter15_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter16_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter17_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter19_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter20_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter21_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter22_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter23_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter24_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter25_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter26_tmp_36_reg_1093;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter27_tmp_36_reg_1093;
    sc_signal< sc_lv<31> > tmp_41_fu_831_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<10> > state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter1_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter2_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter3_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter4_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter5_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter6_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter7_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter8_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter9_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter10_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter11_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter12_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter13_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter14_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter15_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter16_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter17_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter18_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter19_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter20_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter21_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter22_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter23_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter24_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter25_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter26_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<10> > ap_reg_pp2_iter27_state_vector_addr_3_reg_1102;
    sc_signal< sc_lv<32> > temp_data_load_reg_1113;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_lv<32> > grp_fu_402_p2;
    sc_signal< sc_lv<32> > tmp_40_reg_1118;
    sc_signal< sc_lv<1> > tmp_24_fu_847_p2;
    sc_signal< sc_lv<31> > tmp_32_fu_852_p2;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter0;
    sc_signal< sc_lv<32> > tmp_data_V_4_fu_863_p1;
    sc_signal< sc_lv<32> > tmp_33_fu_873_p2;
    sc_signal< sc_logic > ap_CS_fsm_state151;
    sc_signal< sc_lv<1> > tmp_s_fu_883_p2;
    sc_signal< sc_lv<31> > tmp_10_fu_888_p2;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter0;
    sc_signal< sc_lv<1> > tmp_last_V_1_fu_899_p2;
    sc_signal< sc_lv<1> > tmp_last_V_1_reg_1166;
    sc_signal< sc_lv<32> > tmp_data_V_1_fu_904_p1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state44;
    sc_signal< bool > ap_block_state55_pp0_stage11_iter0;
    sc_signal< bool > ap_block_pp0_stage11_subdone;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage11;
    sc_signal< bool > ap_block_state49_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state61_pp0_stage5_iter1;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state64;
    sc_signal< bool > ap_block_pp1_stage9_subdone;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state118;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter26;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter27;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter28;
    sc_signal< bool > ap_block_pp3_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp3_exit_iter0_state148;
    sc_signal< bool > ap_block_pp4_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp4_exit_iter0_state152;
    sc_signal< sc_lv<32> > tmp_3_reg_275;
    sc_signal< sc_lv<32> > ap_phi_mux_sum_load_phi_fu_290_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_sum_load2_phi_fu_315_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<31> > ap_phi_mux_i_load_1_phi_fu_303_p4;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_sum_load2_reg_311;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_sum_load2_reg_311;
    sc_signal< bool > ap_block_pp0_stage11_11001;
    sc_signal< sc_lv<31> > batch_load_reg_323;
    sc_signal< sc_logic > ap_CS_fsm_state147;
    sc_signal< sc_logic > ap_CS_fsm_state62;
    sc_signal< sc_lv<31> > ap_phi_mux_i_load_2_phi_fu_350_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<64> > tmp_13_fu_663_p1;
    sc_signal< sc_lv<64> > tmp_19_fu_736_p1;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<1> > or_cond_fu_731_p2;
    sc_signal< sc_lv<64> > tmp_37_fu_837_p1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<64> > tmp_31_fu_858_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_894_p1;
    sc_signal< bool > ap_block_pp3_stage0_01001;
    sc_signal< bool > ap_block_pp4_stage0_01001;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<32> > grp_fu_390_p0;
    sc_signal< sc_lv<32> > grp_fu_390_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > grp_fu_398_p0;
    sc_signal< sc_lv<32> > grp_fu_398_p1;
    sc_signal< sc_lv<32> > grp_fu_406_p0;
    sc_signal< sc_lv<32> > grp_fu_406_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > grp_fu_412_p0;
    sc_signal< sc_lv<32> > grp_fu_412_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_logic > ap_CS_fsm_state84;
    sc_signal< sc_lv<23> > tmp_21_fu_587_p1;
    sc_signal< sc_lv<8> > tmp_30_fu_612_p4;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<32> > sum_load_to_int_fu_627_p1;
    sc_signal< sc_lv<8> > tmp_16_fu_631_p4;
    sc_signal< sc_lv<23> > tmp_46_fu_641_p1;
    sc_signal< sc_lv<1> > tmp_47_fu_668_p2;
    sc_signal< sc_lv<1> > tmp_48_fu_672_p2;
    sc_signal< sc_lv<1> > tmp_49_fu_676_p2;
    sc_signal< sc_lv<32> > tmp_15_to_int_fu_692_p1;
    sc_signal< sc_lv<8> > tmp_52_fu_696_p4;
    sc_signal< sc_lv<23> > tmp_53_fu_706_p1;
    sc_signal< sc_lv<1> > tmp_54_fu_722_p2;
    sc_signal< sc_lv<1> > tmp_56_fu_726_p2;
    sc_signal< sc_lv<32> > batch_load_cast_fu_741_p1;
    sc_signal< sc_lv<32> > i_load_2_cast_fu_756_p1;
    sc_signal< sc_lv<32> > sum_load_1_to_int_fu_781_p1;
    sc_signal< sc_lv<8> > tmp_57_fu_785_p4;
    sc_signal< sc_lv<23> > tmp_58_fu_795_p1;
    sc_signal< sc_lv<1> > notrhs_fu_805_p2;
    sc_signal< sc_lv<1> > notlhs_fu_799_p2;
    sc_signal< sc_lv<1> > tmp_59_fu_811_p2;
    sc_signal< sc_lv<32> > tmp_35_cast_fu_822_p1;
    sc_signal< sc_lv<32> > i_load_3_cast_fu_843_p1;
    sc_signal< sc_lv<32> > i_load_cast_fu_879_p1;
    sc_signal< sc_logic > grp_fu_390_ce;
    sc_signal< bool > ap_predicate_op289_fadd_state47;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< bool > ap_block_state50_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_state51_pp0_stage7_iter0;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_state52_pp0_stage8_iter0;
    sc_signal< bool > ap_block_pp0_stage8_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage8;
    sc_signal< bool > ap_block_state53_pp0_stage9_iter0;
    sc_signal< bool > ap_block_pp0_stage9_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage9;
    sc_signal< bool > ap_block_state54_pp0_stage10_iter0;
    sc_signal< bool > ap_block_pp0_stage10_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage10;
    sc_signal< bool > ap_block_state67_pp1_stage3_iter0;
    sc_signal< bool > ap_block_state77_pp1_stage3_iter1;
    sc_signal< bool > ap_block_pp1_stage3_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage3;
    sc_signal< bool > ap_block_state68_pp1_stage4_iter0;
    sc_signal< bool > ap_block_state78_pp1_stage4_iter1;
    sc_signal< bool > ap_block_pp1_stage4_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage4;
    sc_signal< bool > ap_block_state69_pp1_stage5_iter0;
    sc_signal< bool > ap_block_state79_pp1_stage5_iter1;
    sc_signal< bool > ap_block_pp1_stage5_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage5;
    sc_signal< bool > ap_block_state70_pp1_stage6_iter0;
    sc_signal< bool > ap_block_state80_pp1_stage6_iter1;
    sc_signal< bool > ap_block_pp1_stage6_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage6;
    sc_signal< bool > ap_block_state71_pp1_stage7_iter0;
    sc_signal< bool > ap_block_state81_pp1_stage7_iter1;
    sc_signal< bool > ap_block_pp1_stage7_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage7;
    sc_signal< bool > ap_block_state72_pp1_stage8_iter0;
    sc_signal< bool > ap_block_state82_pp1_stage8_iter1;
    sc_signal< bool > ap_block_pp1_stage8_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage8;
    sc_signal< sc_logic > grp_fu_398_ce;
    sc_signal< sc_logic > grp_fu_412_ce;
    sc_signal< bool > ap_predicate_op309_fcmp_state57;
    sc_signal< sc_logic > ap_CS_fsm_state85;
    sc_signal< sc_logic > ap_CS_fsm_state86;
    sc_signal< sc_lv<5> > grp_fu_412_opcode;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< sc_logic > ap_CS_fsm_state155;
    sc_signal< bool > ap_block_state155;
    sc_signal< sc_lv<107> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< bool > ap_block_pp0_stage8_subdone;
    sc_signal< bool > ap_block_pp0_stage9_subdone;
    sc_signal< bool > ap_block_pp0_stage10_subdone;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< bool > ap_block_pp1_stage2_subdone;
    sc_signal< bool > ap_block_pp1_stage3_subdone;
    sc_signal< bool > ap_block_pp1_stage4_subdone;
    sc_signal< bool > ap_block_pp1_stage5_subdone;
    sc_signal< bool > ap_block_pp1_stage6_subdone;
    sc_signal< bool > ap_block_pp1_stage7_subdone;
    sc_signal< bool > ap_block_pp1_stage8_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    sc_signal< sc_logic > ap_idle_pp3;
    sc_signal< sc_logic > ap_enable_pp3;
    sc_signal< sc_logic > ap_idle_pp4;
    sc_signal< sc_logic > ap_enable_pp4;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<107> ap_ST_fsm_state1;
    static const sc_lv<107> ap_ST_fsm_state2;
    static const sc_lv<107> ap_ST_fsm_state3;
    static const sc_lv<107> ap_ST_fsm_state4;
    static const sc_lv<107> ap_ST_fsm_state5;
    static const sc_lv<107> ap_ST_fsm_state6;
    static const sc_lv<107> ap_ST_fsm_state7;
    static const sc_lv<107> ap_ST_fsm_state8;
    static const sc_lv<107> ap_ST_fsm_state9;
    static const sc_lv<107> ap_ST_fsm_state10;
    static const sc_lv<107> ap_ST_fsm_state11;
    static const sc_lv<107> ap_ST_fsm_state12;
    static const sc_lv<107> ap_ST_fsm_state13;
    static const sc_lv<107> ap_ST_fsm_state14;
    static const sc_lv<107> ap_ST_fsm_state15;
    static const sc_lv<107> ap_ST_fsm_state16;
    static const sc_lv<107> ap_ST_fsm_state17;
    static const sc_lv<107> ap_ST_fsm_state18;
    static const sc_lv<107> ap_ST_fsm_state19;
    static const sc_lv<107> ap_ST_fsm_state20;
    static const sc_lv<107> ap_ST_fsm_state21;
    static const sc_lv<107> ap_ST_fsm_state22;
    static const sc_lv<107> ap_ST_fsm_state23;
    static const sc_lv<107> ap_ST_fsm_state24;
    static const sc_lv<107> ap_ST_fsm_state25;
    static const sc_lv<107> ap_ST_fsm_state26;
    static const sc_lv<107> ap_ST_fsm_state27;
    static const sc_lv<107> ap_ST_fsm_state28;
    static const sc_lv<107> ap_ST_fsm_state29;
    static const sc_lv<107> ap_ST_fsm_state30;
    static const sc_lv<107> ap_ST_fsm_state31;
    static const sc_lv<107> ap_ST_fsm_state32;
    static const sc_lv<107> ap_ST_fsm_state33;
    static const sc_lv<107> ap_ST_fsm_state34;
    static const sc_lv<107> ap_ST_fsm_state35;
    static const sc_lv<107> ap_ST_fsm_state36;
    static const sc_lv<107> ap_ST_fsm_state37;
    static const sc_lv<107> ap_ST_fsm_state38;
    static const sc_lv<107> ap_ST_fsm_state39;
    static const sc_lv<107> ap_ST_fsm_state40;
    static const sc_lv<107> ap_ST_fsm_state41;
    static const sc_lv<107> ap_ST_fsm_state42;
    static const sc_lv<107> ap_ST_fsm_state43;
    static const sc_lv<107> ap_ST_fsm_pp0_stage0;
    static const sc_lv<107> ap_ST_fsm_pp0_stage1;
    static const sc_lv<107> ap_ST_fsm_pp0_stage2;
    static const sc_lv<107> ap_ST_fsm_pp0_stage3;
    static const sc_lv<107> ap_ST_fsm_pp0_stage4;
    static const sc_lv<107> ap_ST_fsm_pp0_stage5;
    static const sc_lv<107> ap_ST_fsm_pp0_stage6;
    static const sc_lv<107> ap_ST_fsm_pp0_stage7;
    static const sc_lv<107> ap_ST_fsm_pp0_stage8;
    static const sc_lv<107> ap_ST_fsm_pp0_stage9;
    static const sc_lv<107> ap_ST_fsm_pp0_stage10;
    static const sc_lv<107> ap_ST_fsm_pp0_stage11;
    static const sc_lv<107> ap_ST_fsm_state62;
    static const sc_lv<107> ap_ST_fsm_state63;
    static const sc_lv<107> ap_ST_fsm_pp1_stage0;
    static const sc_lv<107> ap_ST_fsm_pp1_stage1;
    static const sc_lv<107> ap_ST_fsm_pp1_stage2;
    static const sc_lv<107> ap_ST_fsm_pp1_stage3;
    static const sc_lv<107> ap_ST_fsm_pp1_stage4;
    static const sc_lv<107> ap_ST_fsm_pp1_stage5;
    static const sc_lv<107> ap_ST_fsm_pp1_stage6;
    static const sc_lv<107> ap_ST_fsm_pp1_stage7;
    static const sc_lv<107> ap_ST_fsm_pp1_stage8;
    static const sc_lv<107> ap_ST_fsm_pp1_stage9;
    static const sc_lv<107> ap_ST_fsm_state84;
    static const sc_lv<107> ap_ST_fsm_state85;
    static const sc_lv<107> ap_ST_fsm_state86;
    static const sc_lv<107> ap_ST_fsm_state87;
    static const sc_lv<107> ap_ST_fsm_state88;
    static const sc_lv<107> ap_ST_fsm_state89;
    static const sc_lv<107> ap_ST_fsm_state90;
    static const sc_lv<107> ap_ST_fsm_state91;
    static const sc_lv<107> ap_ST_fsm_state92;
    static const sc_lv<107> ap_ST_fsm_state93;
    static const sc_lv<107> ap_ST_fsm_state94;
    static const sc_lv<107> ap_ST_fsm_state95;
    static const sc_lv<107> ap_ST_fsm_state96;
    static const sc_lv<107> ap_ST_fsm_state97;
    static const sc_lv<107> ap_ST_fsm_state98;
    static const sc_lv<107> ap_ST_fsm_state99;
    static const sc_lv<107> ap_ST_fsm_state100;
    static const sc_lv<107> ap_ST_fsm_state101;
    static const sc_lv<107> ap_ST_fsm_state102;
    static const sc_lv<107> ap_ST_fsm_state103;
    static const sc_lv<107> ap_ST_fsm_state104;
    static const sc_lv<107> ap_ST_fsm_state105;
    static const sc_lv<107> ap_ST_fsm_state106;
    static const sc_lv<107> ap_ST_fsm_state107;
    static const sc_lv<107> ap_ST_fsm_state108;
    static const sc_lv<107> ap_ST_fsm_state109;
    static const sc_lv<107> ap_ST_fsm_state110;
    static const sc_lv<107> ap_ST_fsm_state111;
    static const sc_lv<107> ap_ST_fsm_state112;
    static const sc_lv<107> ap_ST_fsm_state113;
    static const sc_lv<107> ap_ST_fsm_state114;
    static const sc_lv<107> ap_ST_fsm_state115;
    static const sc_lv<107> ap_ST_fsm_state116;
    static const sc_lv<107> ap_ST_fsm_state117;
    static const sc_lv<107> ap_ST_fsm_pp2_stage0;
    static const sc_lv<107> ap_ST_fsm_state147;
    static const sc_lv<107> ap_ST_fsm_pp3_stage0;
    static const sc_lv<107> ap_ST_fsm_state151;
    static const sc_lv<107> ap_ST_fsm_pp4_stage0;
    static const sc_lv<107> ap_ST_fsm_state155;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2E;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_67;
    static const sc_lv<32> ap_const_lv32_69;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_3A;
    static const sc_lv<32> ap_const_lv32_42;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_46;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_64;
    static const sc_lv<32> ap_const_lv32_65;
    static const sc_lv<32> ap_const_lv32_68;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_66;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1E3CE508;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_3D;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<32> ap_const_lv32_44;
    static const sc_lv<32> ap_const_lv32_45;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_6A;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage10();
    void thread_ap_CS_fsm_pp0_stage11();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_pp0_stage8();
    void thread_ap_CS_fsm_pp0_stage9();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp1_stage2();
    void thread_ap_CS_fsm_pp1_stage3();
    void thread_ap_CS_fsm_pp1_stage4();
    void thread_ap_CS_fsm_pp1_stage5();
    void thread_ap_CS_fsm_pp1_stage6();
    void thread_ap_CS_fsm_pp1_stage7();
    void thread_ap_CS_fsm_pp1_stage8();
    void thread_ap_CS_fsm_pp1_stage9();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_pp3_stage0();
    void thread_ap_CS_fsm_pp4_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state117();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state147();
    void thread_ap_CS_fsm_state151();
    void thread_ap_CS_fsm_state155();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state62();
    void thread_ap_CS_fsm_state63();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state84();
    void thread_ap_CS_fsm_state85();
    void thread_ap_CS_fsm_state86();
    void thread_ap_CS_fsm_state87();
    void thread_ap_CS_fsm_state88();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage10_11001();
    void thread_ap_block_pp0_stage10_subdone();
    void thread_ap_block_pp0_stage11_11001();
    void thread_ap_block_pp0_stage11_subdone();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_pp0_stage8_11001();
    void thread_ap_block_pp0_stage8_subdone();
    void thread_ap_block_pp0_stage9_11001();
    void thread_ap_block_pp0_stage9_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_pp1_stage2();
    void thread_ap_block_pp1_stage2_11001();
    void thread_ap_block_pp1_stage2_subdone();
    void thread_ap_block_pp1_stage3_11001();
    void thread_ap_block_pp1_stage3_subdone();
    void thread_ap_block_pp1_stage4_11001();
    void thread_ap_block_pp1_stage4_subdone();
    void thread_ap_block_pp1_stage5_11001();
    void thread_ap_block_pp1_stage5_subdone();
    void thread_ap_block_pp1_stage6_11001();
    void thread_ap_block_pp1_stage6_subdone();
    void thread_ap_block_pp1_stage7_11001();
    void thread_ap_block_pp1_stage7_subdone();
    void thread_ap_block_pp1_stage8_11001();
    void thread_ap_block_pp1_stage8_subdone();
    void thread_ap_block_pp1_stage9_11001();
    void thread_ap_block_pp1_stage9_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_pp3_stage0();
    void thread_ap_block_pp3_stage0_01001();
    void thread_ap_block_pp3_stage0_11001();
    void thread_ap_block_pp3_stage0_subdone();
    void thread_ap_block_pp4_stage0();
    void thread_ap_block_pp4_stage0_01001();
    void thread_ap_block_pp4_stage0_11001();
    void thread_ap_block_pp4_stage0_subdone();
    void thread_ap_block_state118_pp2_stage0_iter0();
    void thread_ap_block_state119_pp2_stage0_iter1();
    void thread_ap_block_state120_pp2_stage0_iter2();
    void thread_ap_block_state121_pp2_stage0_iter3();
    void thread_ap_block_state122_pp2_stage0_iter4();
    void thread_ap_block_state123_pp2_stage0_iter5();
    void thread_ap_block_state124_pp2_stage0_iter6();
    void thread_ap_block_state125_pp2_stage0_iter7();
    void thread_ap_block_state126_pp2_stage0_iter8();
    void thread_ap_block_state127_pp2_stage0_iter9();
    void thread_ap_block_state128_pp2_stage0_iter10();
    void thread_ap_block_state129_pp2_stage0_iter11();
    void thread_ap_block_state130_pp2_stage0_iter12();
    void thread_ap_block_state131_pp2_stage0_iter13();
    void thread_ap_block_state132_pp2_stage0_iter14();
    void thread_ap_block_state133_pp2_stage0_iter15();
    void thread_ap_block_state134_pp2_stage0_iter16();
    void thread_ap_block_state135_pp2_stage0_iter17();
    void thread_ap_block_state136_pp2_stage0_iter18();
    void thread_ap_block_state137_pp2_stage0_iter19();
    void thread_ap_block_state138_pp2_stage0_iter20();
    void thread_ap_block_state139_pp2_stage0_iter21();
    void thread_ap_block_state140_pp2_stage0_iter22();
    void thread_ap_block_state141_pp2_stage0_iter23();
    void thread_ap_block_state142_pp2_stage0_iter24();
    void thread_ap_block_state143_pp2_stage0_iter25();
    void thread_ap_block_state144_pp2_stage0_iter26();
    void thread_ap_block_state145_pp2_stage0_iter27();
    void thread_ap_block_state146_pp2_stage0_iter28();
    void thread_ap_block_state148_pp3_stage0_iter0();
    void thread_ap_block_state149_io();
    void thread_ap_block_state149_pp3_stage0_iter1();
    void thread_ap_block_state150_io();
    void thread_ap_block_state150_pp3_stage0_iter2();
    void thread_ap_block_state152_pp4_stage0_iter0();
    void thread_ap_block_state153_io();
    void thread_ap_block_state153_pp4_stage0_iter1();
    void thread_ap_block_state154_io();
    void thread_ap_block_state154_pp4_stage0_iter2();
    void thread_ap_block_state155();
    void thread_ap_block_state44_pp0_stage0_iter0();
    void thread_ap_block_state45_pp0_stage1_iter0();
    void thread_ap_block_state46_pp0_stage2_iter0();
    void thread_ap_block_state47_pp0_stage3_iter0();
    void thread_ap_block_state48_pp0_stage4_iter0();
    void thread_ap_block_state49_pp0_stage5_iter0();
    void thread_ap_block_state50_pp0_stage6_iter0();
    void thread_ap_block_state51_pp0_stage7_iter0();
    void thread_ap_block_state52_pp0_stage8_iter0();
    void thread_ap_block_state53_pp0_stage9_iter0();
    void thread_ap_block_state54_pp0_stage10_iter0();
    void thread_ap_block_state55_pp0_stage11_iter0();
    void thread_ap_block_state56_pp0_stage0_iter1();
    void thread_ap_block_state57_pp0_stage1_iter1();
    void thread_ap_block_state58_pp0_stage2_iter1();
    void thread_ap_block_state59_pp0_stage3_iter1();
    void thread_ap_block_state60_pp0_stage4_iter1();
    void thread_ap_block_state61_pp0_stage5_iter1();
    void thread_ap_block_state64_pp1_stage0_iter0();
    void thread_ap_block_state65_pp1_stage1_iter0();
    void thread_ap_block_state66_pp1_stage2_iter0();
    void thread_ap_block_state67_pp1_stage3_iter0();
    void thread_ap_block_state68_pp1_stage4_iter0();
    void thread_ap_block_state69_pp1_stage5_iter0();
    void thread_ap_block_state70_pp1_stage6_iter0();
    void thread_ap_block_state71_pp1_stage7_iter0();
    void thread_ap_block_state72_pp1_stage8_iter0();
    void thread_ap_block_state73_pp1_stage9_iter0();
    void thread_ap_block_state74_pp1_stage0_iter1();
    void thread_ap_block_state75_pp1_stage1_iter1();
    void thread_ap_block_state76_pp1_stage2_iter1();
    void thread_ap_block_state77_pp1_stage3_iter1();
    void thread_ap_block_state78_pp1_stage4_iter1();
    void thread_ap_block_state79_pp1_stage5_iter1();
    void thread_ap_block_state80_pp1_stage6_iter1();
    void thread_ap_block_state81_pp1_stage7_iter1();
    void thread_ap_block_state82_pp1_stage8_iter1();
    void thread_ap_block_state83_pp1_stage9_iter1();
    void thread_ap_condition_pp0_exit_iter0_state44();
    void thread_ap_condition_pp1_exit_iter0_state64();
    void thread_ap_condition_pp2_exit_iter0_state118();
    void thread_ap_condition_pp3_exit_iter0_state148();
    void thread_ap_condition_pp4_exit_iter0_state152();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_enable_pp3();
    void thread_ap_enable_pp4();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_idle_pp3();
    void thread_ap_idle_pp4();
    void thread_ap_phi_mux_i_load_1_phi_fu_303_p4();
    void thread_ap_phi_mux_i_load_2_phi_fu_350_p4();
    void thread_ap_phi_mux_sum_load2_phi_fu_315_p4();
    void thread_ap_phi_mux_sum_load_phi_fu_290_p4();
    void thread_ap_predicate_op289_fadd_state47();
    void thread_ap_predicate_op309_fcmp_state57();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_batch_load_cast_fu_741_p1();
    void thread_grp_fu_390_ce();
    void thread_grp_fu_390_p0();
    void thread_grp_fu_390_p1();
    void thread_grp_fu_398_ce();
    void thread_grp_fu_398_p0();
    void thread_grp_fu_398_p1();
    void thread_grp_fu_406_p0();
    void thread_grp_fu_406_p1();
    void thread_grp_fu_412_ce();
    void thread_grp_fu_412_opcode();
    void thread_grp_fu_412_p0();
    void thread_grp_fu_412_p1();
    void thread_i_load_1_cast_fu_597_p1();
    void thread_i_load_2_cast_fu_756_p1();
    void thread_i_load_3_cast_fu_843_p1();
    void thread_i_load_cast_fu_879_p1();
    void thread_notlhs1_fu_710_p2();
    void thread_notlhs5_fu_645_p2();
    void thread_notlhs7_fu_621_p2();
    void thread_notlhs_fu_799_p2();
    void thread_notrhs2_fu_716_p2();
    void thread_notrhs6_fu_651_p2();
    void thread_notrhs8_fu_591_p2();
    void thread_notrhs_fu_805_p2();
    void thread_or_cond_fu_731_p2();
    void thread_spike_matrix_address0();
    void thread_spike_matrix_ce0();
    void thread_spike_matrix_we0();
    void thread_state_vector_address0();
    void thread_state_vector_address1();
    void thread_state_vector_ce0();
    void thread_state_vector_ce1();
    void thread_state_vector_d0();
    void thread_state_vector_we0();
    void thread_state_vector_we1();
    void thread_stream_in_TDATA_blk_n();
    void thread_stream_in_TREADY();
    void thread_stream_in_V_data_V_0_ack_in();
    void thread_stream_in_V_data_V_0_ack_out();
    void thread_stream_in_V_data_V_0_data_out();
    void thread_stream_in_V_data_V_0_load_A();
    void thread_stream_in_V_data_V_0_load_B();
    void thread_stream_in_V_data_V_0_sel();
    void thread_stream_in_V_data_V_0_state_cmp_full();
    void thread_stream_in_V_data_V_0_vld_in();
    void thread_stream_in_V_data_V_0_vld_out();
    void thread_stream_in_V_dest_V_0_ack_in();
    void thread_stream_in_V_dest_V_0_ack_out();
    void thread_stream_in_V_dest_V_0_data_out();
    void thread_stream_in_V_dest_V_0_load_A();
    void thread_stream_in_V_dest_V_0_load_B();
    void thread_stream_in_V_dest_V_0_sel();
    void thread_stream_in_V_dest_V_0_state_cmp_full();
    void thread_stream_in_V_dest_V_0_vld_in();
    void thread_stream_in_V_dest_V_0_vld_out();
    void thread_stream_in_V_id_V_0_ack_in();
    void thread_stream_in_V_id_V_0_ack_out();
    void thread_stream_in_V_id_V_0_data_out();
    void thread_stream_in_V_id_V_0_load_A();
    void thread_stream_in_V_id_V_0_load_B();
    void thread_stream_in_V_id_V_0_sel();
    void thread_stream_in_V_id_V_0_state_cmp_full();
    void thread_stream_in_V_id_V_0_vld_in();
    void thread_stream_in_V_id_V_0_vld_out();
    void thread_stream_in_V_keep_V_0_ack_in();
    void thread_stream_in_V_keep_V_0_ack_out();
    void thread_stream_in_V_keep_V_0_data_out();
    void thread_stream_in_V_keep_V_0_load_A();
    void thread_stream_in_V_keep_V_0_load_B();
    void thread_stream_in_V_keep_V_0_sel();
    void thread_stream_in_V_keep_V_0_state_cmp_full();
    void thread_stream_in_V_keep_V_0_vld_in();
    void thread_stream_in_V_keep_V_0_vld_out();
    void thread_stream_in_V_last_V_0_ack_in();
    void thread_stream_in_V_last_V_0_ack_out();
    void thread_stream_in_V_last_V_0_data_out();
    void thread_stream_in_V_last_V_0_load_A();
    void thread_stream_in_V_last_V_0_load_B();
    void thread_stream_in_V_last_V_0_sel();
    void thread_stream_in_V_last_V_0_state_cmp_full();
    void thread_stream_in_V_last_V_0_vld_in();
    void thread_stream_in_V_last_V_0_vld_out();
    void thread_stream_in_V_strb_V_0_ack_in();
    void thread_stream_in_V_strb_V_0_ack_out();
    void thread_stream_in_V_strb_V_0_data_out();
    void thread_stream_in_V_strb_V_0_load_A();
    void thread_stream_in_V_strb_V_0_load_B();
    void thread_stream_in_V_strb_V_0_sel();
    void thread_stream_in_V_strb_V_0_state_cmp_full();
    void thread_stream_in_V_strb_V_0_vld_in();
    void thread_stream_in_V_strb_V_0_vld_out();
    void thread_stream_in_V_user_V_0_ack_in();
    void thread_stream_in_V_user_V_0_ack_out();
    void thread_stream_in_V_user_V_0_data_out();
    void thread_stream_in_V_user_V_0_load_A();
    void thread_stream_in_V_user_V_0_load_B();
    void thread_stream_in_V_user_V_0_sel();
    void thread_stream_in_V_user_V_0_state_cmp_full();
    void thread_stream_in_V_user_V_0_vld_in();
    void thread_stream_in_V_user_V_0_vld_out();
    void thread_stream_out_TDATA();
    void thread_stream_out_TDATA_blk_n();
    void thread_stream_out_TDEST();
    void thread_stream_out_TID();
    void thread_stream_out_TKEEP();
    void thread_stream_out_TLAST();
    void thread_stream_out_TSTRB();
    void thread_stream_out_TUSER();
    void thread_stream_out_TVALID();
    void thread_stream_out_V_data_V_1_ack_in();
    void thread_stream_out_V_data_V_1_ack_out();
    void thread_stream_out_V_data_V_1_data_in();
    void thread_stream_out_V_data_V_1_data_out();
    void thread_stream_out_V_data_V_1_load_A();
    void thread_stream_out_V_data_V_1_load_B();
    void thread_stream_out_V_data_V_1_sel();
    void thread_stream_out_V_data_V_1_state_cmp_full();
    void thread_stream_out_V_data_V_1_vld_in();
    void thread_stream_out_V_data_V_1_vld_out();
    void thread_stream_out_V_dest_V_1_ack_in();
    void thread_stream_out_V_dest_V_1_ack_out();
    void thread_stream_out_V_dest_V_1_data_out();
    void thread_stream_out_V_dest_V_1_load_A();
    void thread_stream_out_V_dest_V_1_load_B();
    void thread_stream_out_V_dest_V_1_sel();
    void thread_stream_out_V_dest_V_1_state_cmp_full();
    void thread_stream_out_V_dest_V_1_vld_in();
    void thread_stream_out_V_dest_V_1_vld_out();
    void thread_stream_out_V_id_V_1_ack_in();
    void thread_stream_out_V_id_V_1_ack_out();
    void thread_stream_out_V_id_V_1_data_out();
    void thread_stream_out_V_id_V_1_load_A();
    void thread_stream_out_V_id_V_1_load_B();
    void thread_stream_out_V_id_V_1_sel();
    void thread_stream_out_V_id_V_1_state_cmp_full();
    void thread_stream_out_V_id_V_1_vld_in();
    void thread_stream_out_V_id_V_1_vld_out();
    void thread_stream_out_V_keep_V_1_ack_in();
    void thread_stream_out_V_keep_V_1_ack_out();
    void thread_stream_out_V_keep_V_1_data_out();
    void thread_stream_out_V_keep_V_1_load_A();
    void thread_stream_out_V_keep_V_1_load_B();
    void thread_stream_out_V_keep_V_1_sel();
    void thread_stream_out_V_keep_V_1_state_cmp_full();
    void thread_stream_out_V_keep_V_1_vld_in();
    void thread_stream_out_V_keep_V_1_vld_out();
    void thread_stream_out_V_last_V_1_ack_in();
    void thread_stream_out_V_last_V_1_ack_out();
    void thread_stream_out_V_last_V_1_data_in();
    void thread_stream_out_V_last_V_1_data_out();
    void thread_stream_out_V_last_V_1_load_A();
    void thread_stream_out_V_last_V_1_load_B();
    void thread_stream_out_V_last_V_1_sel();
    void thread_stream_out_V_last_V_1_state_cmp_full();
    void thread_stream_out_V_last_V_1_vld_in();
    void thread_stream_out_V_last_V_1_vld_out();
    void thread_stream_out_V_strb_V_1_ack_in();
    void thread_stream_out_V_strb_V_1_ack_out();
    void thread_stream_out_V_strb_V_1_data_out();
    void thread_stream_out_V_strb_V_1_load_A();
    void thread_stream_out_V_strb_V_1_load_B();
    void thread_stream_out_V_strb_V_1_sel();
    void thread_stream_out_V_strb_V_1_state_cmp_full();
    void thread_stream_out_V_strb_V_1_vld_in();
    void thread_stream_out_V_strb_V_1_vld_out();
    void thread_stream_out_V_user_V_1_ack_in();
    void thread_stream_out_V_user_V_1_ack_out();
    void thread_stream_out_V_user_V_1_data_out();
    void thread_stream_out_V_user_V_1_load_A();
    void thread_stream_out_V_user_V_1_load_B();
    void thread_stream_out_V_user_V_1_sel();
    void thread_stream_out_V_user_V_1_state_cmp_full();
    void thread_stream_out_V_user_V_1_vld_in();
    void thread_stream_out_V_user_V_1_vld_out();
    void thread_sum_load_1_to_int_fu_781_p1();
    void thread_sum_load_to_int_fu_627_p1();
    void thread_temp_data_address0();
    void thread_temp_data_ce0();
    void thread_temp_data_we0();
    void thread_tmp_10_fu_888_p2();
    void thread_tmp_11_fu_601_p2();
    void thread_tmp_12_fu_657_p1();
    void thread_tmp_13_fu_663_p1();
    void thread_tmp_15_to_int_fu_692_p1();
    void thread_tmp_16_fu_631_p4();
    void thread_tmp_17_fu_688_p2();
    void thread_tmp_18_fu_745_p2();
    void thread_tmp_19_fu_736_p1();
    void thread_tmp_20_fu_606_p2();
    void thread_tmp_21_fu_587_p1();
    void thread_tmp_22_fu_760_p2();
    void thread_tmp_24_fu_847_p2();
    void thread_tmp_25_fu_771_p1();
    void thread_tmp_26_fu_776_p1();
    void thread_tmp_29_fu_765_p2();
    void thread_tmp_2_fu_496_p2();
    void thread_tmp_30_fu_612_p4();
    void thread_tmp_31_fu_858_p1();
    void thread_tmp_32_fu_852_p2();
    void thread_tmp_33_fu_873_p2();
    void thread_tmp_35_cast_fu_822_p1();
    void thread_tmp_36_fu_826_p2();
    void thread_tmp_37_fu_837_p1();
    void thread_tmp_41_fu_831_p2();
    void thread_tmp_42_fu_750_p2();
    void thread_tmp_46_fu_641_p1();
    void thread_tmp_47_fu_668_p2();
    void thread_tmp_48_fu_672_p2();
    void thread_tmp_49_fu_676_p2();
    void thread_tmp_4_fu_507_p2();
    void thread_tmp_51_fu_682_p2();
    void thread_tmp_52_fu_696_p4();
    void thread_tmp_53_fu_706_p1();
    void thread_tmp_54_fu_722_p2();
    void thread_tmp_56_fu_726_p2();
    void thread_tmp_57_fu_785_p4();
    void thread_tmp_58_fu_795_p1();
    void thread_tmp_59_fu_811_p2();
    void thread_tmp_5_fu_512_p2();
    void thread_tmp_61_fu_817_p2();
    void thread_tmp_6_fu_518_p2();
    void thread_tmp_7_fu_583_p1();
    void thread_tmp_8_fu_894_p1();
    void thread_tmp_data_V_1_fu_904_p1();
    void thread_tmp_data_V_4_fu_863_p1();
    void thread_tmp_last_V_1_fu_899_p2();
    void thread_tmp_s_fu_883_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
